const addBoundsPolygon=(e,t)=>{const l=cgpv.api.maps[e].transformAndDensifyExtent(t,`EPSG:${cgpv.api.maps[e].currentProjection}`,"EPSG:4326"),{geometry:n}=cgpv.api.maps[e].layer;n.setActiveGeometryGroup(),n.deleteGeometriesFromGroup(0);cgpv.api.maps[e].layer.geometry.addPolygon([l],{style:{strokeColor:"#000",strokeWidth:5,strokeOpacity:.8}})},createInfoTable=(e,t,l,n)=>{const a=document.getElementById(`${t}-${n}`);a.textContent="";const d=document.getElementById(`layer${e.slice(-1)}-${n}-info`);d&&d.remove();const i=document.createElement("div");i.id=`layer${e.slice(-1)}-${n}-info`,a.appendChild(i),Object.keys(l).forEach((t=>{const a=l[t].data[n],d=document.createElement("h1");if(d.innerText=a.length?t:`${t} (empty)`,i.appendChild(d),a.length){let t=document.createElement("h2");t.innerText="Aliases and types",i.appendChild(t);let l=document.createElement("table");l.classList.add("info"),i.appendChild(l);let n=document.createElement("tr");n.classList.add("info"),l.appendChild(n);let d=document.createElement("th");d.classList.add("infoCol1"),n.appendChild(d),Object.keys(a[0].fieldInfo).forEach((e=>{d=document.createElement("th"),d.classList.add("info"),d.innerText=e,n.appendChild(d)})),n=document.createElement("tr"),n.classList.add("info"),l.appendChild(n),d=document.createElement("td"),d.classList.add("infoCol1"),d.innerText="Aliases =>",n.appendChild(d),Object.keys(a[0].fieldInfo).forEach((e=>{d=document.createElement("td"),d.classList.add("info"),d.innerText=a[0].fieldInfo[e].alias,n.appendChild(d)})),n=document.createElement("tr"),n.classList.add("infoCol1"),l.appendChild(n),d=document.createElement("td"),d.classList.add("infoCol1"),d.innerText="Types =>",n.appendChild(d),Object.keys(a[0].fieldInfo).forEach((e=>{d=document.createElement("td"),d.classList.add("info"),d.innerText=a[0].fieldInfo[e].dataType,n.appendChild(d)})),t=document.createElement("h2"),t.innerText="Data",i.appendChild(t),l=document.createElement("table"),l.classList.add("info"),i.appendChild(l);let s=!0;a.forEach((t=>{s&&(n=document.createElement("tr"),n.classList.add("info"),l.appendChild(n),d=document.createElement("th"),d.classList.add("infoCol1"),d.innerText="Symbology",n.appendChild(d),d=document.createElement("th"),d.classList.add("infoCol1"),d.innerText="Zoom To",n.appendChild(d),Object.keys(t.fieldInfo).forEach((e=>{d=document.createElement("th"),d.classList.add("info"),d.innerText=e,n.appendChild(d)})),s=!1),n=document.createElement("tr"),n.classList.add("info"),l.appendChild(n),d=document.createElement("td"),d.classList.add("info"),d.appendChild(t.featureIcon),n.appendChild(d),d=document.createElement("td"),d.classList.add("info"),n.appendChild(d);const a=document.createElement("button");a.innerText="Zoom To Feature",a.addEventListener("click",(l=>{cgpv.api.maps[e].zoomToExtent(t.extent),addBoundsPolygon(e,t.extent)})),d.appendChild(a),Object.keys(t.fieldInfo).forEach((e=>{if(d=document.createElement("td"),d.classList.add("info"),"date"===t.fieldInfo[e].dataType){const{dateUtilities:l}=cgpv.api;d.innerText=t.fieldInfo[e].value}else d.innerText=t.fieldInfo[e].value;n.appendChild(d)}))}))}i.appendChild(document.createElement("br")),i.appendChild(document.createElement("hr"))}))},createTableOfFilter=e=>{let t=document.getElementById(`layer${e.slice(-1)}-buttons-pre`);const l=document.getElementById(`layer${e.slice(-1)}-buttons-table`);l&&l.remove();const n=document.createElement("table");n.id=`layer${e.slice(-1)}-buttons-table`,n.style.width="100%",n.border="1px solid black",t.appendChild(n),cgpv.api.maps?.[e]?.layer?.geoviewLayers&&Object.keys(cgpv.api.maps[e].layer.geoviewLayers).forEach((l=>{const a=cgpv.api.maps[e].layer.geoviewLayers[l];Object.keys(cgpv.api.maps[e].layer.registeredLayers).forEach((d=>{if(d.startsWith(l)){const l=cgpv.api.maps[e].layer.registeredLayers[d],{geoviewRenderer:i}=cgpv.api.maps[e];i.getLegendStyles(l).then((d=>{t=document.createElement("td"),t.border="1px solid black",n.appendChild(t);const i=document.createElement("h1");i.innerText=a.geoviewLayerName.en,t.appendChild(i);const s=document.createElement("h2");s.innerText=`${l?.layerName?.en}`,s.style.height="15px",t.appendChild(s);const o=document.createElement("button");let c=a.getVisible(l);o.innerText=c?void 0===l?.source?.style?"Hide":`Hide style ${l.source.style}`:void 0===l?.source?.style?"Show":`Show style ${l.source.style}`,o.addEventListener("click",(e=>{c=!a.getVisible(l),o.innerText=c?void 0===l?.source?.style?"Hide":`Hide style ${l.source.style}`:void 0===l?.source?.style?"Show":`Show style ${l.source.style}`,a.setVisible(c,l)})),s.appendChild(o),l.style&&Object.keys(l.style).forEach((n=>{const i=document.createElement("p");if(i.innerText=`Geometry = ${n}`,i.style.height="15px",t.appendChild(i),"uniqueValue"===l.style[n].styleType){if(l.style[n].defaultSettings)if("always"===l.style[n].defaultVisible){const e=document.createElement("label");e.innerText="Always show ",e.style.fontSize="15px",e.style.height="15px",t.appendChild(e),t.appendChild(d[n].defaultCanvas);const l=document.createElement("br");l.style.height="1px",t.appendChild(l)}else{const i=document.createElement("button");"yes"===l.style[n].defaultVisible?i.innerText=`Hide ${l.style[n].defaultLabel}`:"no"===l.style[n].defaultVisible&&(i.innerText=`Show ${l.style[n].defaultLabel}`),i.addEventListener("click",(t=>{"yes"===l.style[n].defaultVisible?(l.style[n].defaultVisible="no",i.innerText=`Show ${l.style[n].defaultLabel}`):"no"===l.style[n].defaultVisible&&(l.style[n].defaultVisible="yes",i.innerText=`Hide ${l.style[n].defaultLabel}`);const d=document.getElementById(`checkbox-${e}-${a.geoviewLayerId}`),s=document.getElementById(`filter-input-${e}-${a.geoviewLayerId}`),o="true"===d.value?s.value:a.getLayerFilter(l);a.applyViewFilter(l,o,"true"!==d.value)})),t.appendChild(i),t.appendChild(d[n].defaultCanvas);const s=document.createElement("br");s.style.height="1px",t.appendChild(s)}for(let i=0;i<l.style[n].uniqueValueStyleInfo.length;i++)if("always"===l.style[n].uniqueValueStyleInfo[i].visible){const e=document.createElement("label");e.innerText="Always show ",e.style.fontSize="15px",t.appendChild(e),t.appendChild(d[n].arrayOfCanvas[i]);const l=document.createElement("br");l.style.height="1px",t.appendChild(l)}else{const s=document.createElement("button");"yes"===l.style[n].uniqueValueStyleInfo[i].visible?s.innerText=`Hide ${l.style[n].uniqueValueStyleInfo[i].label}`:"no"===l.style[n].uniqueValueStyleInfo[i].visible&&(s.innerText=`Show ${l.style[n].uniqueValueStyleInfo[i].label}`),s.addEventListener("click",(t=>{const d=l.style[n].uniqueValueStyleInfo[i];"yes"===d.visible?(d.visible="no",s.innerText=`Show ${d.label}`):"no"===d.visible&&(d.visible="yes",s.innerText=`Hide ${d.label}`);const o=document.getElementById(`checkbox-${e}-${a.geoviewLayerId}`),c=document.getElementById(`filter-input-${e}-${a.geoviewLayerId}`),r="true"===o.value?c.value:a.getLayerFilter(l);a.applyViewFilter(l,r,"true"!==o.value)})),t.appendChild(s),t.appendChild(d[n].arrayOfCanvas[i]);const o=document.createElement("br");o.style.height="1px",t.appendChild(o)}}else if("classBreaks"===l.style[n].styleType){if(l.style[n].defaultSettings)if("always"===l.style[n].defaultVisible){const e=document.createElement("label");e.innerText="Always show ",e.style.fontSize="15px",t.appendChild(e),t.appendChild(d[n].defaultCanvas);const l=document.createElement("br");l.style.height="1px",t.appendChild(l)}else{const d=document.createElement("button");"yes"===l.style[n].defaultVisible?d.innerText=`Hide ${l.style[n].defaultLabel}`:"no"===l.style[n].defaultVisible&&(d.innerText=`Show ${l.style[n].defaultLabel}`),d.addEventListener("click",(t=>{"yes"===l.style[n].defaultVisible?(l.style[n].defaultVisible="no",d.innerText=`Show ${l.style[n].defaultLabel}`):"no"===l.style[n].defaultVisible&&(l.style[n].defaultVisible="yes",d.innerText=`Hide ${l.style[n].defaultLabel}`);const i=document.getElementById(`checkbox-${e}-${a.geoviewLayerId}`),s=document.getElementById(`filter-input-${e}-${a.geoviewLayerId}`),o="true"===i.value?s.value:a.getLayerFilter(l);a.applyViewFilter(l,o,"true"!==i.value)})),t.appendChild(d);const i=document.createElement("br");i.style.height="1px",t.appendChild(i)}for(let i=0;i<l.style[n].classBreakStyleInfo.length;i++)if("always"===l.style[n].classBreakStyleInfo[i].visible){const e=document.createElement("label");e.innerText="Always show ",e.style.fontSize="15px",t.appendChild(e),t.appendChild(d[n].arrayOfCanvas[i]);const l=document.createElement("br");l.style.height="1px",t.appendChild(l)}else{const s=document.createElement("button");"yes"===l.style[n].classBreakStyleInfo[i].visible?s.innerText=`Hide ${l.style[n].classBreakStyleInfo[i].label}`:"no"===l.style[n].classBreakStyleInfo[i].visible&&(s.innerText=`Show ${l.style[n].classBreakStyleInfo[i].label}`),s.addEventListener("click",(t=>{const d=l.style[n].classBreakStyleInfo[i];"yes"===d.visible?(d.visible="no",s.innerText=`Show ${d.label}`):"no"===d.visible&&(d.visible="yes",s.innerText=`Hide ${d.label}`);const o=document.getElementById(`checkbox-${e}-${a.geoviewLayerId}`),c=document.getElementById(`filter-input-${e}-${a.geoviewLayerId}`),r="true"===o.value?c.value:a.getLayerFilter(l);a.applyViewFilter(l,r,"true"!==o.value)})),t.appendChild(s),t.appendChild(d[n].arrayOfCanvas[i]);const o=document.createElement("br");o.style.height="1px",t.appendChild(o)}}if(a.getLayerFilter){const n=document.createElement("p");n.innerText="Extra filter: ",t.appendChild(n);const d=document.createElement("input");d.id=`filter-input-${e}-${a.geoviewLayerId}`,d.style.width="50%",n.appendChild(d),d.value=a.getLayerFilter(l)||"";const i=document.createElement("button");i.addEventListener("click",(t=>{const n=document.getElementById(`checkbox-${e}-${a.geoviewLayerId}`);a.applyViewFilter(l,d.value,"true"!==n.value)})),i.innerText="Apply",n.style.width="max-content",n.appendChild(i);const s=document.createElement("input");s.type="checkbox",s.value="false",s.id=`checkbox-${e}-${a.geoviewLayerId}`,s.addEventListener("click",(e=>{s.value="true"===s.value?"false":"true",a.applyViewFilter(l,d.value,"true"!==s.value)})),t.appendChild(s);const o=document.createElement("label");o.innerText="apply only the extra filter",t.appendChild(o)}}))}))}}))}))};function displayLegend(e,t){const l=(e,t)=>{const l=document.createElement("th");l.style="text-align: center; vertical-align: middle;",l.innerHTML=e,t.appendChild(l)},n=(e,t)=>{const l=document.createElement("td");l.style.verticalAlign="middle",l.style.textAlign="center",e?"string"==typeof e?l.innerHTML=e.replaceAll("<","&lt;").replaceAll(">","&gt;"):l.appendChild(e):l.innerHTML="NO LEGEND",t.appendChild(l)},a=document.getElementById(`${e}-table`);a&&a.parentNode.removeChild(a);const d=document.getElementById(`${e}-table-pre`),i=document.createElement("table");i.id=`${e}-table`,i.border="1",i.style="width:50%",d.appendChild(i);let s=!0;Object.keys(t).forEach((e=>{const a=t[e];if("processed"===a.layerStatus&&a?.data?.legend)if("ogcWms"===a.data?.type||"imageStatic"===a.data?.type){if(s){s=!1;const e=document.createElement("tr");i.appendChild(e),l("Layer Path",e),l("Symbology",e)}const e=document.createElement("tr");n(a.data.layerPath,e),n(a.data.legend,e),i.appendChild(e)}else{const t=(e,t,l)=>{const a=document.createElement("tr");n(e,a),n(t,a),n(l,a),i.appendChild(a)};if(s){s=!1;const e=document.createElement("tr");i.appendChild(e),l("Layer Path",e),l("Label",e),l("Symbology",e)}a.data?.legend&&Object.keys(a.data.legend).forEach((l=>{if(l)if("uniqueValue"===a.data.styleConfig[l].styleType){a.data.legend[l].defaultCanvas&&t(e,a.data.styleConfig[l].defaultLabel,a.data.legend[l].defaultCanvas);for(let n=0;n<a.data.legend[l].arrayOfCanvas.length;n++)t(e,a.data.styleConfig[l].uniqueValueStyleInfo[n].label,a.data.legend[l].arrayOfCanvas[n])}else if("classBreaks"===a.data.styleConfig[l].styleType){a.data.legend[l].defaultCanvas&&t(e,a.data.styleConfig[l].defaultLabel,a.data.legend[l].defaultCanvas);for(let n=0;n<a.data.legend[l].arrayOfCanvas.length;n++)t(e,a.data.styleConfig[l].classBreakStyleInfo[n].label,a.data.legend[l].arrayOfCanvas[n])}else"simple"===a.data.styleConfig[l].styleType&&t(e,a.data.styleConfig[l].label,a.data.legend[l].defaultCanvas)}))}else{if(s){s=!1;const e=document.createElement("tr");i.appendChild(e),l("Layer Path",e),l("Status",e)}const t=document.createElement("tr");n(e,t);let d=void 0===a.data&&"processed"===a.layerStatus?"(waiting for legend)":"";d=null===a.data&&"processed"===a.layerStatus?"(legend fetch error)":d,d=a.data&&!a.data.legend&&"processed"===a.layerStatus?"(no legend)":d,n(`${a.layerStatus} ${d}`,t),i.appendChild(t)}}))}