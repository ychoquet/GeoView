{"version":3,"file":"corePackages/geoview-footer-panel.js","mappings":"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","sources":["webpack://geoview-core/../geoview-footer-panel/src/footer-panel-legend-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/data-table.tsx","webpack://geoview-core/../geoview-footer-panel/src/layers.tsx","webpack://geoview-core/../geoview-footer-panel/src/index.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props */\nimport type React from 'react';\nimport { TypeWindow, payloadIsALayerConfig, payloadIsRemoveGeoViewLayer } from 'geoview-core';\nimport { LayerConfigPayload, PayloadBaseClass, TypeRemoveGeoviewLayerPayload } from 'geoview-core/src/api/events/payloads';\n\ninterface Props {\n  mapId: string;\n}\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the legend component\n *\n * @returns {JSX.Element} created legend component\n */\nexport function FooterPanelLegendItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [legend, setLegend] = useState<React.DetailedReactHTMLElement<{}, HTMLElement>>();\n  const [mapLayers, setMapLayers] = useState<string[]>([]);\n\n  const updateLayers = () => {\n    if (api.maps[mapId].layer?.layerOrder !== undefined) setMapLayers([...api.maps[mapId].layer.layerOrder].reverse());\n  };\n\n  const eventMapLoadedListenerFunction = () => updateLayers();\n  const eventRemoveLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsRemoveGeoViewLayer(payload)) {\n      setMapLayers((orderedLayers) =>\n        orderedLayers.filter((layerId) => layerId !== (payload as TypeRemoveGeoviewLayerPayload).geoviewLayer.geoviewLayerId)\n      );\n    }\n  };\n\n  const eventAddLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsALayerConfig(payload)) {\n      api.event.on(\n        api.eventNames.LAYER.EVENT_LAYER_ADDED,\n        () => {\n          updateLayers();\n          api.event.off(api.eventNames.LAYER.EVENT_LAYER_ADDED, `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`);\n        },\n        `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`\n      );\n    }\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, eventMapLoadedListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_REMOVE_LAYER, eventRemoveLayerListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_ADD_LAYER, eventAddLayerListenerFunction, mapId);\n\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, eventMapLoadedListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_REMOVE_LAYER, mapId, eventRemoveLayerListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_ADD_LAYER, mapId, eventAddLayerListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLegend(api.maps[mapId].legend.createLegend({ layerIds: mapLayers, isRemoveable: false, canSetOpacity: true, canZoomTo: true }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapLayers]);\n\n  return <div>{legend}</div>;\n}\n","import type React from 'react';\nimport { TypeWindow } from 'geoview-core';\n\ninterface DataTableProps {\n  mapId: string;\n}\n\nconst w = window as TypeWindow;\n\n/**\n * Create the datatable that displays in footer panel.\n *\n * @returns {JSX.Element} created data table component\n */\n\nexport function DataTable({ mapId }: DataTableProps) {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n  const { useState, useEffect } = react;\n\n  const [table, setTable] = useState(null);\n\n  /**\n   * Create data table from geo view layers.\n   */\n  const createDataTable = async () => {\n    const data = await cgpv.api.maps[mapId].dataTable.createDataPanel();\n    setTable(data);\n  };\n\n  /**\n   * get the table after map is loaded and timeout has been passed.\n   */\n  const getDataTable = () => {\n    setTimeout(() => {\n      createDataTable();\n    }, 1000);\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, getDataTable, mapId);\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, getDataTable);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div>{table}</div>;\n}\n","/* eslint-disable react/require-default-props */\nimport type React from 'react';\nimport { TypeWindow, payloadIsALayerConfig, payloadIsRemoveGeoViewLayer } from 'geoview-core';\nimport { LayerConfigPayload, PayloadBaseClass, TypeRemoveGeoviewLayerPayload } from 'geoview-core/src/api/events/payloads';\n\ninterface Props {\n  mapId: string;\n}\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the layers component\n *\n * @returns {JSX.Element} created layers component\n */\nexport function Layers({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [layers, setLayers] = useState<React.DetailedReactHTMLElement<{}, HTMLElement>>();\n  const [mapLayers, setMapLayers] = useState<string[]>([]);\n\n  const updateLayers = () => {\n    if (api.maps[mapId].layer?.layerOrder !== undefined) setMapLayers([...api.maps[mapId].layer.layerOrder].reverse());\n  };\n\n  const eventMapLoadedListenerFunction = () => updateLayers();\n  const eventRemoveLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsRemoveGeoViewLayer(payload)) {\n      setMapLayers((orderedLayers) =>\n        orderedLayers.filter((layerId) => layerId !== (payload as TypeRemoveGeoviewLayerPayload).geoviewLayer.geoviewLayerId)\n      );\n    }\n  };\n\n  const eventAddLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsALayerConfig(payload)) {\n      api.event.on(\n        api.eventNames.LAYER.EVENT_LAYER_ADDED,\n        () => {\n          updateLayers();\n          api.event.off(api.eventNames.LAYER.EVENT_LAYER_ADDED, `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`);\n        },\n        `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`\n      );\n    }\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, eventMapLoadedListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_REMOVE_LAYER, eventRemoveLayerListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_ADD_LAYER, eventAddLayerListenerFunction, mapId);\n\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, eventMapLoadedListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_REMOVE_LAYER, mapId, eventRemoveLayerListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_ADD_LAYER, mapId, eventAddLayerListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLayers(api.maps[mapId].layers.createLayers({ layerIds: mapLayers, isRemoveable: false, canSetOpacity: true, canZoomTo: true }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapLayers]);\n\n  return <div>{layers}</div>;\n}\n","import {\n  Cast,\n  AbstractPlugin,\n  TypePluginOptions,\n  TypeButtonPanel,\n  TypeWindow,\n  toJsonObject,\n  TypeJsonObject,\n  AnySchemaObject,\n  TypeJsonValue,\n} from 'geoview-core';\n\nimport { HubOutlinedIcon, InfoOutlinedIcon, LayersOutlinedIcon, StorageIcon } from 'geoview-core/src/ui';\nimport schema from '../schema.json';\nimport defaultConfig from '../default-config-footer-panel.json';\nimport { FooterPanelLegendItem } from './footer-panel-legend-item';\nimport { DataTable } from './data-table';\nimport { Layers } from './layers';\n\nconst w = window as TypeWindow;\n\ntype CustomTabs = {\n  id: string;\n  title: string;\n  contentHTML: string;\n};\n\n/**\n * Create a class for the plugin instance\n */\nclass FooterPanelPlugin extends AbstractPlugin {\n  // store the created button panel object\n  buttonPanel: TypeButtonPanel | null;\n\n  constructor(pluginId: string, props: TypePluginOptions) {\n    super(pluginId, props);\n    this.buttonPanel = null;\n  }\n\n  /**\n   * Return the package schema\n   *\n   * @returns {AnySchemaObject} the package schema\n   */\n  schema = (): AnySchemaObject => schema;\n\n  /**\n   * Return the default config for this package\n   *\n   * @returns {TypeJsonObject} the default config\n   */\n  defaultConfig = (): TypeJsonObject => toJsonObject(defaultConfig);\n\n  /**\n   * translations object to inject to the viewer translations\n   */\n  translations = toJsonObject({\n    en: {\n      footerPanel: {\n        legend: 'Legend',\n        layers: 'Layers',\n        details: 'Details',\n        dataTable: 'DataTable',\n        timeSlider: 'Time Slider',\n        geochart: 'Chart',\n      },\n    },\n    fr: {\n      footerPanel: {\n        legend: 'Légende',\n        layers: 'Couches',\n        details: 'Détails',\n        dataTable: 'Données',\n        timeSlider: 'Curseur Temporel',\n        geochart: 'Graphique',\n      },\n    },\n  });\n\n  /**\n   * Added function called after the plugin has been initialized\n   */\n  added = (): void => {\n    const { configObj, pluginProps } = this as AbstractPlugin;\n\n    const { mapId } = pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      const { api } = cgpv;\n      const { footerTabs } = api.maps[mapId];\n\n      const defaultTabs = configObj?.tabs.defaultTabs as Array<string>;\n      let tabsCounter = 0;\n      if (defaultTabs.includes('legend')) {\n        // create new tab and add the LegendComponent to the footer tab\n        footerTabs.createFooterTab({\n          id: 'legend',\n          value: tabsCounter,\n          label: 'footerPanel.legend',\n          content: () => <FooterPanelLegendItem mapId={mapId} />,\n          icon: <HubOutlinedIcon />,\n        });\n        tabsCounter++;\n      }\n\n      if (defaultTabs.includes('layers')) {\n        // create new tab and add the LayersComponent to the footer tab\n        footerTabs.createFooterTab({\n          id: 'layers',\n          value: tabsCounter,\n          label: 'footerPanel.layers',\n          content: () => <Layers mapId={mapId} />,\n          icon: <LayersOutlinedIcon />,\n        });\n        tabsCounter++;\n      }\n\n      // create the listener to return the details\n      if (defaultTabs.includes('details')) {\n        // create new tab and add the DetailComponent to the footer tab\n        const detailsTabValue = tabsCounter;\n        footerTabs.createFooterTab({\n          id: 'details',\n          value: detailsTabValue,\n          label: 'footerPanel.details',\n          content: () => api.maps[mapId].details.createDetails(mapId),\n          icon: <InfoOutlinedIcon />,\n        });\n        tabsCounter++;\n      }\n\n      if (defaultTabs.includes('data-table')) {\n        /// create new tab and add the DataTable Component to the footer tab\n        footerTabs.createFooterTab({\n          id: 'data-table',\n          value: tabsCounter,\n          label: 'footerPanel.dataTable',\n          content: () => <DataTable mapId={mapId} />,\n          icon: <StorageIcon />,\n        });\n        tabsCounter++;\n      }\n\n      if (defaultTabs.includes('time-slider')) {\n        /// create a new tab by loading the time-slider plugin\n        api.plugin\n          .loadScript('time-slider')\n          .then((constructor: AbstractPlugin | ((pluginId: string, props: TypeJsonObject) => TypeJsonValue)) => {\n            api.plugin.addPlugin(\n              'time-slider',\n              mapId,\n              constructor,\n              toJsonObject({\n                mapId,\n              })\n            );\n          });\n      }\n\n      if (defaultTabs.includes('geoChart')) {\n        /// create a new tab by loading the geo chart plugin\n        api.plugin\n          .loadScript('geochart')\n          .then((constructor: AbstractPlugin | ((pluginId: string, props: TypeJsonObject) => TypeJsonValue)) => {\n            api.plugin.addPlugin(\n              'geochart',\n              mapId,\n              constructor,\n              toJsonObject({\n                mapId,\n              })\n            );\n          });\n      }\n\n      // TODO add custom detail reusable component when done\n\n      const customTabs = configObj?.tabs.customTabs as Array<string>;\n      for (let i = 0; i < customTabs.length; i++) {\n        const tab = customTabs[i] as unknown as CustomTabs;\n\n        footerTabs.createFooterTab({\n          id: tab.id,\n          value: tabsCounter,\n          label: tab.title,\n          content: tab.contentHTML,\n        });\n        tabsCounter++;\n      }\n    }\n  };\n\n  /**\n   * Function called when the plugin is removed, used for clean up\n   */\n  removed(): void {\n    // const { mapId } = this.pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      // const { api } = cgpv;\n      // TODO: Enable the footer tabs removal\n    }\n  }\n}\n\nexport default FooterPanelPlugin;\n\nw.plugins = w.plugins || {};\nw.plugins['footer-panel'] = Cast<AbstractPlugin>(FooterPanelPlugin);\n"],"names":["w","window","FooterPanelLegendItem","_ref","mapId","cgpv","api","react","useState","useEffect","_useState","_useState2","_slicedToArray","legend","setLegend","_useState3","_useState4","mapLayers","setMapLayers","updateLayers","_api$maps$mapId$layer","undefined","maps","layer","layerOrder","_toConsumableArray","reverse","eventMapLoadedListenerFunction","eventRemoveLayerListenerFunction","payload","payloadIsRemoveGeoViewLayer","orderedLayers","filter","layerId","geoviewLayer","geoviewLayerId","eventAddLayerListenerFunction","payloadIsALayerConfig","event","on","eventNames","LAYER","EVENT_LAYER_ADDED","off","concat","layerConfig","MAP","EVENT_MAP_LOADED","EVENT_REMOVE_LAYER","EVENT_ADD_LAYER","createLegend","layerIds","isRemoveable","canSetOpacity","canZoomTo","_jsx","children","DataTable","table","setTable","createDataTable","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","dataTable","createDataPanel","sent","stop","apply","arguments","getDataTable","setTimeout","Layers","layers","setLayers","createLayers","FooterPanelPlugin","_AbstractPlugin","_inherits","_super","_createSuper","pluginId","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","schema","toJsonObject","defaultConfig","en","footerPanel","details","timeSlider","geochart","fr","configObj","pluginProps","footerTabs","defaultTabs","tabs","tabsCounter","includes","createFooterTab","id","value","label","content","icon","HubOutlinedIcon","LayersOutlinedIcon","detailsTabValue","createDetails","InfoOutlinedIcon","StorageIcon","plugin","loadScript","then","constructor","addPlugin","customTabs","i","length","tab","title","contentHTML","buttonPanel","_createClass","key","AbstractPlugin","plugins","Cast"],"sourceRoot":""}