{"version":3,"file":"corePackages/geoview-footer-panel.js","mappings":"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","sources":["webpack://geoview-core/../geoview-footer-panel/src/details-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/legend-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/data-table.tsx","webpack://geoview-core/../geoview-footer-panel/src/layers.tsx","webpack://geoview-core/../geoview-footer-panel/src/time-slider.tsx","webpack://geoview-core/../geoview-footer-panel/src/index.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props */\nimport type React from 'react';\n// import { MapMouseEventPayload, PayloadBaseClass } from 'geoview-core/src/api/events/payloads';\nimport {\n  useDetailsStoreLayerDataArray,\n  MapMouseEventPayload,\n  PayloadBaseClass,\n  TypeWindow,\n  payloadIsAMapMouseEvent,\n  Coordinate,\n} from 'geoview-core';\n\ninterface Props {\n  mapId: string;\n}\n\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the details component\n *\n * @returns {JSX.Element} created details component\n */\nexport function DetailsItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  // get values from the store\n  const details = useDetailsStoreLayerDataArray();\n\n  const { useState, useEffect } = react;\n\n  //  const [details, setDetails] = useState<TypeArrayOfLayerData>([]);\n  const [list, setList] = useState<React.ReactElement>();\n  const [lngLat, setLngLat] = useState<Coordinate>([]);\n  const [handlerName, setHandlerName] = useState<string | null>(null);\n\n  const eventMapSingleClickListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsAMapMouseEvent(payload)) {\n      const { coordinates } = payload as MapMouseEventPayload;\n      setHandlerName(payload.handlerName);\n      setLngLat(coordinates.lnglat);\n    } else {\n      setLngLat([]);\n    }\n  };\n\n  useEffect(() => {\n    // create the listener to return the details\n    // DELETE THIS api.event.on(api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE, allQueriesDoneListenerFunction, `${mapId}/FeatureInfoLayerSet`);\n    api.event.on(api.eventNames.MAP.EVENT_MAP_SINGLE_CLICK, eventMapSingleClickListenerFunction, mapId);\n    return () => {\n      // DELETE THIS api.event.off(api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE, mapId, allQueriesDoneListenerFunction);\n      api.event.off(api.eventNames.MAP.EVENT_MAP_SINGLE_CLICK, mapId, eventMapSingleClickListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // once page loads, details is empty array based on the useState we defined\n    // we need to create details if we click on a map and single click event triggered, then we have array of layers that is details\n    // if (details.length > 0) {\n    setList(api.maps[mapId].details.createDetails(mapId, details, { mapId, location: lngLat, handlerName }));\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [details, lngLat]);\n\n  return <div>{list}</div>;\n}\n","/* eslint-disable react/require-default-props */\nimport type React from 'react';\nimport { TypeWindow, payloadIsALayerConfig, payloadIsRemoveGeoViewLayer } from 'geoview-core';\nimport { LayerConfigPayload, PayloadBaseClass, TypeRemoveGeoviewLayerPayload } from 'geoview-core/src/api/events/payloads';\n\ninterface Props {\n  mapId: string;\n}\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the legend component\n *\n * @returns {JSX.Element} created legend component\n */\nexport function LegendItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [legend, setLegend] = useState<React.DetailedReactHTMLElement<{}, HTMLElement>>();\n  const [mapLayers, setMapLayers] = useState<string[]>([]);\n\n  const updateLayers = () => {\n    if (api.maps[mapId].layer?.layerOrder !== undefined) setMapLayers([...api.maps[mapId].layer.layerOrder].reverse());\n  };\n\n  const eventMapLoadedListenerFunction = () => updateLayers();\n  const eventRemoveLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsRemoveGeoViewLayer(payload)) {\n      setMapLayers((orderedLayers) =>\n        orderedLayers.filter((layerId) => layerId !== (payload as TypeRemoveGeoviewLayerPayload).geoviewLayer.geoviewLayerId)\n      );\n    }\n  };\n\n  const eventAddLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsALayerConfig(payload)) {\n      api.event.on(\n        api.eventNames.LAYER.EVENT_LAYER_ADDED,\n        () => {\n          updateLayers();\n          api.event.off(api.eventNames.LAYER.EVENT_LAYER_ADDED, `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`);\n        },\n        `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`\n      );\n    }\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, eventMapLoadedListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_REMOVE_LAYER, eventRemoveLayerListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_ADD_LAYER, eventAddLayerListenerFunction, mapId);\n\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, eventMapLoadedListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_REMOVE_LAYER, mapId, eventRemoveLayerListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_ADD_LAYER, mapId, eventAddLayerListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLegend(api.maps[mapId].legend.createLegend({ layerIds: mapLayers, isRemoveable: false, canSetOpacity: true, canZoomTo: true }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapLayers]);\n\n  return <div>{legend}</div>;\n}\n","import type React from 'react';\nimport { TypeWindow } from 'geoview-core';\n\ninterface DataTableProps {\n  mapId: string;\n}\n\nconst w = window as TypeWindow;\n\n/**\n * Create the datatable that displays in footer panel.\n *\n * @returns {JSX.Element} created data table component\n */\n\nexport function DataTable({ mapId }: DataTableProps) {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n  const { useState, useEffect } = react;\n\n  const [table, setTable] = useState(null);\n\n  /**\n   * Create data table from geo view layers.\n   */\n  const createDataTable = async () => {\n    const data = await cgpv.api.maps[mapId].dataTable.createDataPanel();\n    setTable(data);\n  };\n\n  /**\n   * get the table after map is loaded and timeout has been passed.\n   */\n  const getDataTable = () => {\n    setTimeout(() => {\n      createDataTable();\n    }, 1000);\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, getDataTable, mapId);\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, getDataTable);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div>{table}</div>;\n}\n","/* eslint-disable react/require-default-props */\nimport type React from 'react';\nimport { TypeWindow, payloadIsALayerConfig, payloadIsRemoveGeoViewLayer } from 'geoview-core';\nimport { LayerConfigPayload, PayloadBaseClass, TypeRemoveGeoviewLayerPayload } from 'geoview-core/src/api/events/payloads';\n\ninterface Props {\n  mapId: string;\n}\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the layers component\n *\n * @returns {JSX.Element} created layers component\n */\nexport function Layers({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [layers, setLayers] = useState<React.DetailedReactHTMLElement<{}, HTMLElement>>();\n  const [mapLayers, setMapLayers] = useState<string[]>([]);\n\n  const updateLayers = () => {\n    if (api.maps[mapId].layer?.layerOrder !== undefined) setMapLayers([...api.maps[mapId].layer.layerOrder].reverse());\n  };\n\n  const eventMapLoadedListenerFunction = () => updateLayers();\n  const eventRemoveLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsRemoveGeoViewLayer(payload)) {\n      setMapLayers((orderedLayers) =>\n        orderedLayers.filter((layerId) => layerId !== (payload as TypeRemoveGeoviewLayerPayload).geoviewLayer.geoviewLayerId)\n      );\n    }\n  };\n\n  const eventAddLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsALayerConfig(payload)) {\n      api.event.on(\n        api.eventNames.LAYER.EVENT_LAYER_ADDED,\n        () => {\n          updateLayers();\n          api.event.off(api.eventNames.LAYER.EVENT_LAYER_ADDED, `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`);\n        },\n        `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`\n      );\n    }\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, eventMapLoadedListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_REMOVE_LAYER, eventRemoveLayerListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_ADD_LAYER, eventAddLayerListenerFunction, mapId);\n\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, eventMapLoadedListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_REMOVE_LAYER, mapId, eventRemoveLayerListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_ADD_LAYER, mapId, eventAddLayerListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLayers(api.maps[mapId].layers.createLayers({ layerIds: mapLayers, isRemoveable: false, canSetOpacity: true, canZoomTo: true }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapLayers]);\n\n  return <div>{layers}</div>;\n}\n","import type React from 'react';\nimport { TypeWindow } from 'geoview-core';\n\ninterface TimeSliderProps {\n  mapId: string;\n}\n\nconst w = window as TypeWindow;\n\n/**\n * Create the range slider to display in the footer panel.\n *\n * @returns {JSX.Element} created range slider component\n */\n\nexport function TimeSlider({ mapId }: TimeSliderProps) {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n  const { useState, useEffect } = react;\n\n  const [slider, setSlider] = useState(null);\n\n  /**\n   * Create time slider from geo view layers.\n   */\n  const createTimeSlider = async () => {\n    const data = await cgpv.api.maps[mapId].timeSlider.createTimeSlider();\n    setSlider(data);\n  };\n\n  /**\n   * Get the time slider after map is loaded and timeout has passed.\n   */\n  const getTimeSlider = () => {\n    setTimeout(() => {\n      createTimeSlider();\n    }, 1000);\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, getTimeSlider, mapId);\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, getTimeSlider);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div>{slider}</div>;\n}\n","import {\n  Cast,\n  AbstractPlugin,\n  TypePluginOptions,\n  TypeButtonPanel,\n  TypeWindow,\n  toJsonObject,\n  TypeJsonObject,\n  AnySchemaObject,\n  payloadIsAllQueriesDone,\n  TypeArrayOfFeatureInfoEntries,\n  PayloadBaseClass,\n} from 'geoview-core';\n\nimport { HubOutlinedIcon, InfoOutlinedIcon, LayersOutlinedIcon, StorageIcon } from 'geoview-core/src/ui';\nimport schema from '../schema.json';\nimport defaultConfig from '../default-config-footer-panel.json';\nimport { DetailsItem } from './details-item';\nimport { LegendItem } from './legend-item';\nimport { DataTable } from './data-table';\nimport { Layers } from './layers';\nimport { TimeSlider } from './time-slider';\n\nconst w = window as TypeWindow;\n\ntype CustomTabs = {\n  title: string;\n  contentHTML: string;\n};\n\n/**\n * Create a class for the plugin instance\n */\nclass FooterPanelPlugin extends AbstractPlugin {\n  // store the created button panel object\n  buttonPanel: TypeButtonPanel | null;\n\n  constructor(pluginId: string, props: TypePluginOptions) {\n    super(pluginId, props);\n    this.buttonPanel = null;\n  }\n\n  /**\n   * Return the package schema\n   *\n   * @returns {AnySchemaObject} the package schema\n   */\n  schema = (): AnySchemaObject => schema;\n\n  /**\n   * Return the default config for this package\n   *\n   * @returns {TypeJsonObject} the default config\n   */\n  defaultConfig = (): TypeJsonObject => toJsonObject(defaultConfig);\n\n  /**\n   * translations object to inject to the viewer translations\n   */\n  translations = toJsonObject({\n    en: {\n      legend: 'Legend',\n      layers: 'Layers',\n      details: 'Details',\n      dataTable: 'DataTable',\n      timeSlider: 'Time Slider',\n    },\n    fr: {\n      legend: 'Légende',\n      layers: 'Couches',\n      details: 'Détails',\n      dataTable: 'Données',\n      timeSlider: 'Curseur Temporel',\n    },\n  });\n\n  /**\n   * Added function called after the plugin has been initialized\n   */\n  added = (): void => {\n    const { configObj, pluginProps } = this as AbstractPlugin;\n\n    const { mapId } = pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      const { api } = cgpv;\n      const { displayLanguage, footerTabs } = api.maps[mapId];\n\n      const defaultTabs = configObj?.tabs.defaultTabs as Array<string>;\n      let tabsCounter = 0;\n\n      if (defaultTabs.includes('legend')) {\n        // create new tab and add the LegendComponent to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].legend as string,\n          content: () => <LegendItem mapId={mapId} />,\n          icon: <HubOutlinedIcon />,\n        });\n        tabsCounter++;\n      }\n\n      if (defaultTabs.includes('layers')) {\n        // create new tab and add the LayersComponent to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].layers as string,\n          content: () => <Layers mapId={mapId} />,\n          icon: <LayersOutlinedIcon />,\n        });\n        tabsCounter++;\n      }\n\n      // create the listener to return the details\n      if (defaultTabs.includes('details')) {\n        // create new tab and add the DetailComponent to the footer tab\n        const detailsTabValue = tabsCounter;\n        footerTabs.createFooterTab({\n          value: detailsTabValue,\n          label: this.translations[displayLanguage].details as string,\n          content: () => <DetailsItem mapId={mapId} />,\n          icon: <InfoOutlinedIcon />,\n        });\n        tabsCounter++;\n        // select the details tab when map click queries are done\n        api.event.on(\n          api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE,\n          (payload: PayloadBaseClass) => {\n            if (payloadIsAllQueriesDone(payload)) {\n              const { eventType, resultSets } = payload;\n              if (eventType === 'click') {\n                let features: TypeArrayOfFeatureInfoEntries = [];\n                Object.keys(resultSets).forEach((layerPath) => {\n                  features = features.concat(resultSets[layerPath]!);\n                });\n                if (features.length > 0) {\n                  footerTabs.selectFooterTab(detailsTabValue);\n                }\n              }\n            }\n          },\n          `${mapId}/FeatureInfoLayerSet`\n        );\n      }\n\n      if (defaultTabs.includes('data-table')) {\n        /// create new tab and add the DataTable Component to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].dataTable as string,\n          content: () => <DataTable mapId={mapId} />,\n          icon: <StorageIcon />,\n        });\n        tabsCounter++;\n      }\n\n      if (defaultTabs.includes('time-slider')) {\n        /// create new tab and add the DataTable Component to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].timeSlider as string,\n          content: () => <TimeSlider mapId={mapId} />,\n        });\n        tabsCounter++;\n      }\n\n      // TODO add custom detail reusable component when done\n\n      const customTabs = configObj?.tabs.customTabs as Array<string>;\n      for (let i = 0; i < customTabs.length; i++) {\n        const tab = customTabs[i] as unknown as CustomTabs;\n\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: tab.title,\n          content: tab.contentHTML,\n        });\n        tabsCounter++;\n      }\n    }\n  };\n\n  /**\n   * Function called when the plugin is removed, used for clean up\n   */\n  removed(): void {\n    // const { mapId } = this.pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      // const { api } = cgpv;\n      // TODO: Enable the footer tabs removal\n    }\n  }\n}\n\nexport default FooterPanelPlugin;\n\nw.plugins = w.plugins || {};\nw.plugins['footer-panel'] = Cast<AbstractPlugin>(FooterPanelPlugin);\n"],"names":["w","window","DetailsItem","_ref","mapId","cgpv","api","react","details","useDetailsStoreLayerDataArray","useState","useEffect","_useState","_useState2","_slicedToArray","list","setList","_useState3","_useState4","lngLat","setLngLat","_useState5","_useState6","handlerName","setHandlerName","eventMapSingleClickListenerFunction","payload","payloadIsAMapMouseEvent","coordinates","lnglat","event","on","eventNames","MAP","EVENT_MAP_SINGLE_CLICK","off","maps","createDetails","location","_jsx","children","LegendItem","legend","setLegend","mapLayers","setMapLayers","updateLayers","_api$maps$mapId$layer","undefined","layer","layerOrder","_toConsumableArray","reverse","eventMapLoadedListenerFunction","eventRemoveLayerListenerFunction","payloadIsRemoveGeoViewLayer","orderedLayers","filter","layerId","geoviewLayer","geoviewLayerId","eventAddLayerListenerFunction","payloadIsALayerConfig","LAYER","EVENT_LAYER_ADDED","concat","layerConfig","EVENT_MAP_LOADED","EVENT_REMOVE_LAYER","EVENT_ADD_LAYER","createLegend","layerIds","isRemoveable","canSetOpacity","canZoomTo","DataTable","table","setTable","createDataTable","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","dataTable","createDataPanel","sent","stop","apply","arguments","getDataTable","setTimeout","Layers","layers","setLayers","createLayers","TimeSlider","slider","setSlider","createTimeSlider","timeSlider","getTimeSlider","FooterPanelPlugin","_AbstractPlugin","_inherits","_super","_createSuper","pluginId","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","schema","toJsonObject","defaultConfig","en","fr","configObj","pluginProps","_api$maps$mapId","displayLanguage","footerTabs","defaultTabs","tabs","tabsCounter","includes","createFooterTab","value","label","translations","content","icon","HubOutlinedIcon","LayersOutlinedIcon","detailsTabValue","InfoOutlinedIcon","GET_FEATURE_INFO","ALL_QUERIES_DONE","payloadIsAllQueriesDone","eventType","resultSets","features","Object","keys","forEach","layerPath","length","selectFooterTab","StorageIcon","customTabs","i","tab","title","contentHTML","buttonPanel","_createClass","key","AbstractPlugin","plugins","Cast"],"sourceRoot":""}