{"version":3,"file":"corePackages/geoview-footer-panel.js","mappings":"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","sources":["webpack://geoview-core/../geoview-footer-panel/src/details-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/legend-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/data-table.tsx","webpack://geoview-core/../geoview-footer-panel/src/layers.tsx","webpack://geoview-core/../geoview-footer-panel/src/time-slider.tsx","webpack://geoview-core/../geoview-footer-panel/src/index.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props */\nimport type React from 'react';\nimport { MapMouseEventPayload, PayloadBaseClass, TypeAllQueriesDonePayload } from 'geoview-core/src/api/events/payloads';\nimport {\n  TypeWindow,\n  payloadIsAMapMouseEvent,\n  payloadIsAllQueriesDone,\n  TypeArrayOfLayerData,\n  getLocalizedValue,\n  Coordinate,\n} from 'geoview-core';\n\ninterface Props {\n  mapId: string;\n}\n\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the details component\n *\n * @returns {JSX.Element} created details component\n */\nexport function DetailsItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  const [details, setDetails] = useState<TypeArrayOfLayerData>([]);\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [list, setList] = useState<React.ReactElement>();\n  const [lngLat, setLngLat] = useState<Coordinate>([]);\n  const [handlerName, setHandlerName] = useState<string | null>(null);\n\n  const allQueriesDoneListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsAllQueriesDone(payload) && (payload as TypeAllQueriesDonePayload).queryType === 'at_long_lat') {\n      const { resultSets } = payload as TypeAllQueriesDonePayload;\n      const newDetails: TypeArrayOfLayerData = [];\n      Object.keys(resultSets).forEach((layerPath) => {\n        const layerName = getLocalizedValue(api.maps[mapId].layer.registeredLayers[layerPath].layerName, mapId)!;\n        const features = resultSets[layerPath]?.data.at_long_lat;\n        if (features?.length && features?.length > 0) {\n          newDetails.push({ layerPath, layerName, features });\n        }\n      });\n      if (newDetails.length > 0) {\n        setDetails(newDetails);\n      } else {\n        setDetails([]);\n      }\n    } else {\n      setDetails([]);\n    }\n  };\n\n  const eventMapSingleClickListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsAMapMouseEvent(payload)) {\n      const { coordinates } = payload as MapMouseEventPayload;\n      setHandlerName(payload.handlerName);\n      setLngLat(coordinates.lnglat);\n    } else {\n      setLngLat([]);\n    }\n  };\n\n  useEffect(() => {\n    // create the listener to return the details\n    api.event.on(api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE, allQueriesDoneListenerFunction, `${mapId}/FeatureInfoLayerSet`);\n    api.event.on(api.eventNames.MAP.EVENT_MAP_SINGLE_CLICK, eventMapSingleClickListenerFunction, mapId);\n    return () => {\n      api.event.off(api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE, mapId, allQueriesDoneListenerFunction);\n      api.event.off(api.eventNames.MAP.EVENT_MAP_SINGLE_CLICK, mapId, eventMapSingleClickListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // once page loads, details is empty array based on the useState we defined\n    // we need to create details if we click on a map and single click event triggered, then we have array of layers that is details\n    // if (details.length > 0) {\n    setList(api.maps[mapId].details.createDetails(mapId, details, { mapId, location: lngLat, handlerName }));\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [details, lngLat]);\n\n  return <div>{list}</div>;\n}\n","/* eslint-disable react/require-default-props */\nimport type React from 'react';\nimport { TypeWindow, payloadIsALayerConfig, payloadIsRemoveGeoViewLayer } from 'geoview-core';\nimport { LayerConfigPayload, PayloadBaseClass, TypeRemoveGeoviewLayerPayload } from 'geoview-core/src/api/events/payloads';\n\ninterface Props {\n  mapId: string;\n}\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the legend component\n *\n * @returns {JSX.Element} created legend component\n */\nexport function LegendItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [legend, setLegend] = useState<React.DetailedReactHTMLElement<{}, HTMLElement>>();\n  const [mapLayers, setMapLayers] = useState<string[]>([]);\n\n  const updateLayers = () => {\n    if (api.maps[mapId].layer?.layerOrder !== undefined) setMapLayers([...api.maps[mapId].layer.layerOrder].reverse());\n  };\n\n  const eventMapLoadedListenerFunction = () => updateLayers();\n  const eventRemoveLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsRemoveGeoViewLayer(payload)) {\n      setMapLayers((orderedLayers) =>\n        orderedLayers.filter((layerId) => layerId !== (payload as TypeRemoveGeoviewLayerPayload).geoviewLayer.geoviewLayerId)\n      );\n    }\n  };\n\n  const eventAddLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsALayerConfig(payload)) {\n      api.event.on(\n        api.eventNames.LAYER.EVENT_LAYER_ADDED,\n        () => {\n          updateLayers();\n          api.event.off(api.eventNames.LAYER.EVENT_LAYER_ADDED, `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`);\n        },\n        `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`\n      );\n    }\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, eventMapLoadedListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_REMOVE_LAYER, eventRemoveLayerListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_ADD_LAYER, eventAddLayerListenerFunction, mapId);\n\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, eventMapLoadedListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_REMOVE_LAYER, mapId, eventRemoveLayerListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_ADD_LAYER, mapId, eventAddLayerListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLegend(api.maps[mapId].legend.createLegend({ layerIds: mapLayers, isRemoveable: false, canSetOpacity: true, canZoomTo: true }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapLayers]);\n\n  return <div>{legend}</div>;\n}\n","import type React from 'react';\nimport { TypeWindow } from 'geoview-core';\n\ninterface DataTableProps {\n  mapId: string;\n}\n\nconst w = window as TypeWindow;\n\n/**\n * Create the datatable that displays in footer panel.\n *\n * @returns {JSX.Element} created data table component\n */\n\nexport function DataTable({ mapId }: DataTableProps) {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n  const { useState, useEffect } = react;\n\n  const [table, setTable] = useState(null);\n\n  /**\n   * Create data table from geo view layers.\n   */\n  const createDataTable = async () => {\n    const data = await cgpv.api.maps[mapId].dataTable.createDataPanel();\n    setTable(data);\n  };\n\n  /**\n   * get the table after map is loaded and timeout has been passed.\n   */\n  const getDataTable = () => {\n    setTimeout(() => {\n      createDataTable();\n    }, 1000);\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, getDataTable, mapId);\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, getDataTable);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div>{table}</div>;\n}\n","/* eslint-disable react/require-default-props */\nimport type React from 'react';\nimport { TypeWindow, payloadIsALayerConfig, payloadIsRemoveGeoViewLayer } from 'geoview-core';\nimport { LayerConfigPayload, PayloadBaseClass, TypeRemoveGeoviewLayerPayload } from 'geoview-core/src/api/events/payloads';\n\ninterface Props {\n  mapId: string;\n}\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the layers component\n *\n * @returns {JSX.Element} created layers component\n */\nexport function Layers({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [layers, setLayers] = useState<React.DetailedReactHTMLElement<{}, HTMLElement>>();\n  const [mapLayers, setMapLayers] = useState<string[]>([]);\n\n  const updateLayers = () => {\n    if (api.maps[mapId].layer?.layerOrder !== undefined) setMapLayers([...api.maps[mapId].layer.layerOrder].reverse());\n  };\n\n  const eventMapLoadedListenerFunction = () => updateLayers();\n  const eventRemoveLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsRemoveGeoViewLayer(payload)) {\n      setMapLayers((orderedLayers) =>\n        orderedLayers.filter((layerId) => layerId !== (payload as TypeRemoveGeoviewLayerPayload).geoviewLayer.geoviewLayerId)\n      );\n    }\n  };\n\n  const eventAddLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsALayerConfig(payload)) {\n      api.event.on(\n        api.eventNames.LAYER.EVENT_LAYER_ADDED,\n        () => {\n          updateLayers();\n          api.event.off(api.eventNames.LAYER.EVENT_LAYER_ADDED, `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`);\n        },\n        `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`\n      );\n    }\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, eventMapLoadedListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_REMOVE_LAYER, eventRemoveLayerListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_ADD_LAYER, eventAddLayerListenerFunction, mapId);\n\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, eventMapLoadedListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_REMOVE_LAYER, mapId, eventRemoveLayerListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_ADD_LAYER, mapId, eventAddLayerListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLayers(api.maps[mapId].layers.createLayers({ layerIds: mapLayers, isRemoveable: false, canSetOpacity: true, canZoomTo: true }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapLayers]);\n\n  return <div>{layers}</div>;\n}\n","import type React from 'react';\nimport { TypeWindow } from 'geoview-core';\n\ninterface TimeSliderProps {\n  mapId: string;\n}\n\nconst w = window as TypeWindow;\n\n/**\n * Create the range slider to display in the footer panel.\n *\n * @returns {JSX.Element} created range slider component\n */\n\nexport function TimeSlider({ mapId }: TimeSliderProps) {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n  const { useState, useEffect } = react;\n\n  const [slider, setSlider] = useState(null);\n\n  /**\n   * Create time slider from geo view layers.\n   */\n  const createTimeSlider = async () => {\n    const data = await cgpv.api.maps[mapId].timeSlider.createTimeSlider();\n    setSlider(data);\n  };\n\n  /**\n   * Get the time slider after map is loaded and timeout has passed.\n   */\n  const getTimeSlider = () => {\n    setTimeout(() => {\n      createTimeSlider();\n    }, 1000);\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, getTimeSlider, mapId);\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, getTimeSlider);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div>{slider}</div>;\n}\n","import {\n  Cast,\n  AbstractPlugin,\n  TypePluginOptions,\n  TypeButtonPanel,\n  TypeWindow,\n  toJsonObject,\n  TypeJsonObject,\n  AnySchemaObject,\n  payloadIsAllQueriesDone,\n  TypeArrayOfFeatureInfoEntries,\n  PayloadBaseClass,\n} from 'geoview-core';\n\nimport { HubOutlinedIcon, InfoOutlinedIcon, LayersOutlinedIcon, StorageIcon } from 'geoview-core/src/ui';\nimport schema from '../schema.json';\nimport defaultConfig from '../default-config-footer-panel.json';\nimport { DetailsItem } from './details-item';\nimport { LegendItem } from './legend-item';\nimport { DataTable } from './data-table';\nimport { Layers } from './layers';\nimport { TimeSlider } from './time-slider';\n\nconst w = window as TypeWindow;\n\ntype CustomTabs = {\n  title: string;\n  contentHTML: string;\n};\n\n/**\n * Create a class for the plugin instance\n */\nclass FooterPanelPlugin extends AbstractPlugin {\n  // store the created button panel object\n  buttonPanel: TypeButtonPanel | null;\n\n  constructor(pluginId: string, props: TypePluginOptions) {\n    super(pluginId, props);\n    this.buttonPanel = null;\n  }\n\n  /**\n   * Return the package schema\n   *\n   * @returns {AnySchemaObject} the package schema\n   */\n  schema = (): AnySchemaObject => schema;\n\n  /**\n   * Return the default config for this package\n   *\n   * @returns {TypeJsonObject} the default config\n   */\n  defaultConfig = (): TypeJsonObject => toJsonObject(defaultConfig);\n\n  /**\n   * translations object to inject to the viewer translations\n   */\n  translations = toJsonObject({\n    en: {\n      legend: 'Legend',\n      layers: 'Layers',\n      details: 'Details',\n      dataTable: 'DataTable',\n      timeSlider: 'Time Slider',\n    },\n    fr: {\n      legend: 'Légende',\n      layers: 'Couches',\n      details: 'Détails',\n      dataTable: 'Données',\n      timeSlider: 'Curseur Temporel',\n    },\n  });\n\n  /**\n   * Added function called after the plugin has been initialized\n   */\n  added = (): void => {\n    const { configObj, pluginProps } = this as AbstractPlugin;\n\n    const { mapId } = pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      const { api } = cgpv;\n      const { displayLanguage, footerTabs } = api.maps[mapId];\n\n      const defaultTabs = configObj?.tabs.defaultTabs as Array<string>;\n      let tabsCounter = 0;\n\n      if (defaultTabs.includes('legend')) {\n        // create new tab and add the LegendComponent to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].legend as string,\n          content: () => <LegendItem mapId={mapId} />,\n          icon: <HubOutlinedIcon />,\n        });\n        tabsCounter++;\n      }\n\n      if (defaultTabs.includes('layers')) {\n        // create new tab and add the LayersComponent to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].layers as string,\n          content: () => <Layers mapId={mapId} />,\n          icon: <LayersOutlinedIcon />,\n        });\n        tabsCounter++;\n      }\n\n      // create the listener to return the details\n      if (defaultTabs.includes('details')) {\n        // create new tab and add the DetailComponent to the footer tab\n        const detailsTabValue = tabsCounter;\n        footerTabs.createFooterTab({\n          value: detailsTabValue,\n          label: this.translations[displayLanguage].details as string,\n          content: () => <DetailsItem mapId={mapId} />,\n          icon: <InfoOutlinedIcon />,\n        });\n        tabsCounter++;\n        // select the details tab when map click queries are done\n        api.event.on(\n          api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE,\n          (payload: PayloadBaseClass) => {\n            if (payloadIsAllQueriesDone(payload)) {\n              const { resultSets } = payload;\n              let features: TypeArrayOfFeatureInfoEntries = [];\n              Object.keys(resultSets).forEach((layerPath) => {\n                features = features.concat(resultSets[layerPath]!);\n              });\n              if (features.length > 0) {\n                footerTabs.selectFooterTab(detailsTabValue);\n              }\n            }\n          },\n          `${mapId}/FeatureInfoLayerSet`\n        );\n      }\n\n      if (defaultTabs.includes('data-table')) {\n        /// create new tab and add the DataTable Component to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].dataTable as string,\n          content: () => <DataTable mapId={mapId} />,\n          icon: <StorageIcon />,\n        });\n        tabsCounter++;\n      }\n\n      if (defaultTabs.includes('time-slider')) {\n        /// create new tab and add the DataTable Component to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].timeSlider as string,\n          content: () => <TimeSlider mapId={mapId} />,\n        });\n        tabsCounter++;\n      }\n\n      // TODO add custom detail reusable component when done\n\n      const customTabs = configObj?.tabs.customTabs as Array<string>;\n      for (let i = 0; i < customTabs.length; i++) {\n        const tab = customTabs[i] as unknown as CustomTabs;\n\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: tab.title,\n          content: tab.contentHTML,\n        });\n        tabsCounter++;\n      }\n    }\n  };\n\n  /**\n   * Function called when the plugin is removed, used for clean up\n   */\n  removed(): void {\n    // const { mapId } = this.pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      // const { api } = cgpv;\n      // TODO: Enable the footer tabs removal\n    }\n  }\n}\n\nexport default FooterPanelPlugin;\n\nw.plugins = w.plugins || {};\nw.plugins['footer-panel'] = Cast<AbstractPlugin>(FooterPanelPlugin);\n"],"names":["w","window","DetailsItem","_ref","mapId","cgpv","api","react","useState","useEffect","_useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","list","setList","_useState5","_useState6","lngLat","setLngLat","_useState7","_useState8","handlerName","setHandlerName","allQueriesDoneListenerFunction","payload","payloadIsAllQueriesDone","queryType","resultSets","newDetails","Object","keys","forEach","layerPath","_resultSets$layerPath","layerName","getLocalizedValue","maps","layer","registeredLayers","features","data","at_long_lat","length","push","eventMapSingleClickListenerFunction","payloadIsAMapMouseEvent","coordinates","lnglat","event","on","eventNames","GET_FEATURE_INFO","ALL_QUERIES_DONE","concat","MAP","EVENT_MAP_SINGLE_CLICK","off","createDetails","location","_jsx","children","LegendItem","legend","setLegend","mapLayers","setMapLayers","updateLayers","_api$maps$mapId$layer","undefined","layerOrder","_toConsumableArray","reverse","eventMapLoadedListenerFunction","eventRemoveLayerListenerFunction","payloadIsRemoveGeoViewLayer","orderedLayers","filter","layerId","geoviewLayer","geoviewLayerId","eventAddLayerListenerFunction","payloadIsALayerConfig","LAYER","EVENT_LAYER_ADDED","layerConfig","EVENT_MAP_LOADED","EVENT_REMOVE_LAYER","EVENT_ADD_LAYER","createLegend","layerIds","isRemoveable","canSetOpacity","canZoomTo","DataTable","table","setTable","createDataTable","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","dataTable","createDataPanel","sent","stop","apply","arguments","getDataTable","setTimeout","Layers","layers","setLayers","createLayers","TimeSlider","slider","setSlider","createTimeSlider","timeSlider","getTimeSlider","FooterPanelPlugin","_AbstractPlugin","_inherits","_super","_createSuper","pluginId","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","schema","toJsonObject","defaultConfig","en","fr","configObj","pluginProps","_api$maps$mapId","displayLanguage","footerTabs","defaultTabs","tabs","tabsCounter","includes","createFooterTab","value","label","translations","content","icon","HubOutlinedIcon","LayersOutlinedIcon","detailsTabValue","InfoOutlinedIcon","selectFooterTab","StorageIcon","customTabs","i","tab","title","contentHTML","buttonPanel","_createClass","key","AbstractPlugin","plugins","Cast"],"sourceRoot":""}