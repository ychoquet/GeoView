{"version":3,"file":"corePackages/geoview-footer-panel.js","mappings":"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","sources":["webpack://geoview-core/../geoview-footer-panel/src/details-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/legend-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/data-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/index.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props */\nimport type React from 'react';\nimport { PayloadBaseClass } from 'geoview-core/src/api/events/payloads';\nimport {\n  TypeWindow,\n  payloadIsAMapMouseEvent,\n  payloadIsAllQueriesDone,\n  TypeArrayOfLayerData,\n  getLocalizedValue,\n  Coordinate,\n} from 'geoview-core';\n\ninterface Props {\n  mapId: string;\n}\n\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the details component\n *\n * @returns {JSX.Element} created details component\n */\nexport function DetailsItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  const [details, setDetails] = useState<TypeArrayOfLayerData>([]);\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [list, setList] = useState<React.ReactElement>();\n  const [lngLat, setLngLat] = useState<Coordinate>([]);\n  const [handlerName, setHandlerName] = useState<string | null>(null);\n\n  const allQueriesDoneListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsAllQueriesDone(payload)) {\n      const { resultSets } = payload;\n      const newDetails: TypeArrayOfLayerData = [];\n      Object.keys(resultSets).forEach((layerPath) => {\n        const layerName = getLocalizedValue(api.map(mapId).layer.registeredLayers[layerPath].layerName, mapId)!;\n        const features = resultSets[layerPath]!.data;\n        if (features.length > 0) {\n          newDetails.push({ layerPath, layerName, features });\n        }\n      });\n      if (newDetails.length > 0) {\n        setDetails(newDetails);\n      } else {\n        setDetails([]);\n      }\n    } else {\n      setDetails([]);\n    }\n  };\n\n  const eventMapSingleClickListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsAMapMouseEvent(payload)) {\n      const { coordinates } = payload;\n      setHandlerName(payload.handlerName);\n      setLngLat(coordinates.lnglat);\n    } else {\n      setLngLat([]);\n    }\n  };\n\n  useEffect(() => {\n    // create the listener to return the details\n    api.event.on(api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE, allQueriesDoneListenerFunction, `${mapId}/$FeatureInfoLayerSet$`);\n    api.event.on(api.eventNames.MAP.EVENT_MAP_SINGLE_CLICK, eventMapSingleClickListenerFunction, mapId);\n    return () => {\n      api.event.off(api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE, mapId, allQueriesDoneListenerFunction);\n      api.event.off(api.eventNames.MAP.EVENT_MAP_SINGLE_CLICK, mapId, eventMapSingleClickListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setList(api.map(mapId).details.createDetails(mapId, details, { mapId, location: lngLat, handlerName }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [details, lngLat]);\n\n  return <div>{list}</div>;\n}\n","/* eslint-disable react/require-default-props */\nimport type React from 'react';\nimport { TypeWindow, payloadIsALayerConfig, payloadIsRemoveGeoViewLayer } from 'geoview-core';\nimport { PayloadBaseClass } from 'geoview-core/src/api/events/payloads';\n\ninterface Props {\n  mapId: string;\n}\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the legend component\n *\n * @returns {JSX.Element} created legend component\n */\nexport function LegendItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [legend, setLegend] = useState<React.DetailedReactHTMLElement<{}, HTMLElement>>();\n  const [mapLayers, setMapLayers] = useState<string[]>([]);\n\n  const updateLayers = () => {\n    if (api.map(mapId).layer?.layerOrder !== undefined) setMapLayers([...api.map(mapId).layer.layerOrder].reverse());\n  };\n\n  const eventMapLoadedListenerFunction = () => updateLayers();\n  const eventRemoveLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsRemoveGeoViewLayer(payload)) {\n      setMapLayers((orderedLayers) => orderedLayers.filter((layerId) => layerId !== payload.geoviewLayer.geoviewLayerId));\n    }\n  };\n\n  const eventAddLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsALayerConfig(payload)) {\n      api.event.on(\n        api.eventNames.LAYER.EVENT_LAYER_ADDED,\n        () => {\n          updateLayers();\n          api.event.off(api.eventNames.LAYER.EVENT_LAYER_ADDED, `${mapId}/${payload.layerConfig.geoviewLayerId}`);\n        },\n        `${mapId}/${payload.layerConfig.geoviewLayerId}`\n      );\n    }\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, eventMapLoadedListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_REMOVE_LAYER, eventRemoveLayerListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_ADD_LAYER, eventAddLayerListenerFunction, mapId);\n\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, eventMapLoadedListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_REMOVE_LAYER, mapId, eventRemoveLayerListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_ADD_LAYER, mapId, eventAddLayerListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLegend(api.map(mapId).legend.createLegend({ layerIds: mapLayers, isRemoveable: false, canSetOpacity: true, canZoomTo: true }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapLayers]);\n\n  return <div>{legend}</div>;\n}\n","/* eslint-disable react/require-default-props */\nimport { TypeWindow, getLocalizedValue, TypeTabs, AbstractGeoViewVector } from 'geoview-core';\n\ninterface Props {\n  mapId: string;\n}\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the data grid footer component\n *\n * @returns {JSX.Element} created data grid footer component\n */\nexport function DataItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, ui, react } = cgpv;\n  const { Tabs } = ui.elements;\n  const { useState, useEffect } = react;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [dataLayers, setDataLayers] = useState<string[]>([]);\n\n  const updateLayers = () => {\n    if (api.map(mapId).layer?.layerOrder !== undefined) setDataLayers([...api.map(mapId).layer.layerOrder].reverse());\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, updateLayers, mapId);\n    api.event.on(api.eventNames.LAYER_SET.UPDATED, updateLayers, `${mapId}/$LegendsLayerSet$`);\n\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, updateLayers);\n      api.event.off(api.eventNames.LAYER_SET.UPDATED, mapId, updateLayers);\n    };\n  });\n\n  setTimeout(() => {\n    dataLayers.forEach((layerId) => {\n      const layerSelection = document.getElementById(`${layerId}-groupLayerSelection`);\n      if (layerSelection) {\n        (layerSelection as HTMLSelectElement).addEventListener('change', function onChange(this) {\n          const { selectedIndex } = this;\n          const datagridTables = document.getElementsByClassName(`${layerId}-layer-datagrid-table`);\n          if (datagridTables.length > 0) {\n            for (let i = 0; i < datagridTables.length; i++) {\n              (datagridTables[i] as HTMLDivElement).setAttribute('style', `display:${i !== selectedIndex ? 'none' : 'block'}`);\n            }\n          }\n        });\n      }\n    });\n  }, 2000);\n\n  return (\n    <Tabs\n      tabsProps={{\n        variant: 'scrollable',\n      }}\n      tabs={dataLayers.map((layerId, index): TypeTabs => {\n        const geoviewLayerInstance = api.map(mapId).layer.geoviewLayers[layerId] as AbstractGeoViewVector;\n        const labelValue = getLocalizedValue(geoviewLayerInstance.geoviewLayerName, mapId);\n\n        // TODO: needs refactor here for group layers.\n        return {\n          value: index,\n          label: labelValue !== undefined ? labelValue : `data-${index}`,\n          content: () =>\n            api.map(mapId).dataGrid.createDataGrid({\n              layerId,\n            }),\n        };\n      })}\n    />\n  );\n}\n","import {\n  Cast,\n  AbstractPlugin,\n  TypePluginOptions,\n  TypeButtonPanel,\n  TypeWindow,\n  toJsonObject,\n  TypeJsonObject,\n  AnySchemaObject,\n  payloadIsAllQueriesDone,\n  TypeArrayOfFeatureInfoEntries,\n} from 'geoview-core';\n\nimport schema from '../schema.json';\nimport defaultConfig from '../default-config-footer-panel.json';\nimport { DetailsItem } from './details-item';\nimport { LegendItem } from './legend-item';\nimport { DataItem } from './data-item';\n\nconst w = window as TypeWindow;\n\ntype CustomTabs = {\n  title: string;\n  contentHTML: string;\n};\n\n/**\n * Create a class for the plugin instance\n */\nclass FooterPanelPlugin extends AbstractPlugin {\n  // store the created button panel object\n  buttonPanel: TypeButtonPanel | null;\n\n  constructor(pluginId: string, props: TypePluginOptions) {\n    super(pluginId, props);\n    this.buttonPanel = null;\n  }\n\n  /**\n   * Return the package schema\n   *\n   * @returns {AnySchemaObject} the package schema\n   */\n  schema = (): AnySchemaObject => schema;\n\n  /**\n   * Return the default config for this package\n   *\n   * @returns {TypeJsonObject} the default config\n   */\n  defaultConfig = (): TypeJsonObject => toJsonObject(defaultConfig);\n\n  /**\n   * translations object to inject to the viewer translations\n   */\n  translations = toJsonObject({\n    en: {\n      legend: 'Legend',\n      details: 'Details',\n      dataGrid: 'Data',\n    },\n    fr: {\n      legend: 'Légende',\n      details: 'Détails',\n      dataGrid: 'Données',\n    },\n  });\n\n  /**\n   * Added function called after the plugin has been initialized\n   */\n  added = (): void => {\n    const { configObj, pluginProps } = this;\n\n    const { mapId } = pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      const { api } = cgpv;\n      const { displayLanguage, footerTabs, map } = api.map(mapId);\n\n      const mapContainer = map.getTargetElement().parentElement;\n      // Set size of map container based on whether footer-panel is collapsed or not\n      if (mapContainer) {\n        if (configObj?.collapsed === false) {\n          mapContainer.style.height = 'calc( 100% - 300px )';\n        } else {\n          mapContainer.style.height = 'calc( 100% - 55px )';\n        }\n      }\n\n      const defaultTabs = configObj?.tabs.defaultTabs as Array<string>;\n      let tabsCounter = 0;\n\n      if (defaultTabs.includes('legend')) {\n        // create new tab and add the LegendComponent to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].legend as string,\n          content: () => <LegendItem mapId={mapId} />,\n        });\n        tabsCounter++;\n      }\n\n      // create the listener to return the details\n      if (defaultTabs.includes('details')) {\n        // create new tab and add the DetailComponent to the footer tab\n        const detailsTabValue = tabsCounter;\n        footerTabs.createFooterTab({\n          value: detailsTabValue,\n          label: this.translations[displayLanguage].details as string,\n          content: () => <DetailsItem mapId={mapId} />,\n        });\n        tabsCounter++;\n        // select the details tab when map click queries are done\n        api.event.on(\n          api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE,\n          (payload) => {\n            if (payloadIsAllQueriesDone(payload)) {\n              const { resultSets } = payload;\n              let features: TypeArrayOfFeatureInfoEntries = [];\n              Object.keys(resultSets).forEach((layerPath) => {\n                features = features.concat(resultSets[layerPath]!);\n              });\n              if (features.length > 0) {\n                footerTabs.selectFooterTab(detailsTabValue);\n              }\n            }\n          },\n          `${mapId}/$FeatureInfoLayerSet$`\n        );\n      }\n\n      if (defaultTabs.includes('data-grid')) {\n        /// create new tab and add the DataGridComponent to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].dataGrid as string,\n          content: () => <DataItem mapId={mapId} />,\n        });\n        tabsCounter++;\n      }\n\n      // TODO add custom detail reusable component when done\n\n      const customTabs = configObj?.tabs.customTabs as Array<string>;\n      for (let i = 0; i < customTabs.length; i++) {\n        const tab = customTabs[i] as unknown as CustomTabs;\n\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: tab.title,\n          content: tab.contentHTML,\n        });\n        tabsCounter++;\n      }\n    }\n  };\n\n  /**\n   * Function called when the plugin is removed, used for clean up\n   */\n  removed(): void {\n    // const { mapId } = this.pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      // const { api } = cgpv;\n      // TODO: Enable the footer tabs removal\n    }\n  }\n}\n\nexport default FooterPanelPlugin;\n\nw.plugins = w.plugins || {};\nw.plugins['footer-panel'] = Cast<AbstractPlugin>(FooterPanelPlugin);\n"],"names":["w","window","DetailsItem","_ref","mapId","cgpv","api","react","useState","useEffect","_useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","list","setList","_useState5","_useState6","lngLat","setLngLat","_useState7","_useState8","handlerName","setHandlerName","allQueriesDoneListenerFunction","payload","payloadIsAllQueriesDone","resultSets","newDetails","Object","keys","forEach","layerPath","layerName","getLocalizedValue","map","layer","registeredLayers","features","data","length","push","eventMapSingleClickListenerFunction","payloadIsAMapMouseEvent","coordinates","lnglat","event","on","eventNames","GET_FEATURE_INFO","ALL_QUERIES_DONE","concat","MAP","EVENT_MAP_SINGLE_CLICK","off","createDetails","location","_jsx","children","LegendItem","legend","setLegend","mapLayers","setMapLayers","updateLayers","_api$map$layer","undefined","layerOrder","_toConsumableArray","reverse","eventMapLoadedListenerFunction","eventRemoveLayerListenerFunction","payloadIsRemoveGeoViewLayer","orderedLayers","filter","layerId","geoviewLayer","geoviewLayerId","eventAddLayerListenerFunction","payloadIsALayerConfig","LAYER","EVENT_LAYER_ADDED","layerConfig","EVENT_MAP_LOADED","EVENT_REMOVE_LAYER","EVENT_ADD_LAYER","createLegend","layerIds","isRemoveable","canSetOpacity","canZoomTo","DataItem","ui","Tabs","elements","dataLayers","setDataLayers","LAYER_SET","UPDATED","setTimeout","layerSelection","document","getElementById","addEventListener","selectedIndex","this","datagridTables","getElementsByClassName","i","setAttribute","tabsProps","variant","tabs","index","geoviewLayerInstance","geoviewLayers","labelValue","geoviewLayerName","value","label","content","dataGrid","createDataGrid","FooterPanelPlugin","_AbstractPlugin","_inherits","_super","_createSuper","pluginId","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","schema","toJsonObject","defaultConfig","en","fr","_assertThisInitialize","configObj","pluginProps","_api$map","displayLanguage","footerTabs","mapContainer","getTargetElement","parentElement","collapsed","style","height","defaultTabs","tabsCounter","includes","createFooterTab","translations","detailsTabValue","selectFooterTab","customTabs","tab","title","contentHTML","buttonPanel","_createClass","key","AbstractPlugin","plugins","Cast"],"sourceRoot":""}