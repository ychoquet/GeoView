{"version":3,"file":"corePackages/geoview-footer-panel.js","mappings":"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","sources":["webpack://geoview-core/../geoview-footer-panel/src/details-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/legend-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/data-table.tsx","webpack://geoview-core/../geoview-footer-panel/src/index.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props */\nimport type React from 'react';\nimport { MapMouseEventPayload, PayloadBaseClass, TypeAllQueriesDonePayload } from 'geoview-core/src/api/events/payloads';\nimport {\n  TypeWindow,\n  payloadIsAMapMouseEvent,\n  payloadIsAllQueriesDone,\n  TypeArrayOfLayerData,\n  getLocalizedValue,\n  Coordinate,\n} from 'geoview-core';\n\ninterface Props {\n  mapId: string;\n}\n\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the details component\n *\n * @returns {JSX.Element} created details component\n */\nexport function DetailsItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  const [details, setDetails] = useState<TypeArrayOfLayerData>([]);\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [list, setList] = useState<React.ReactElement>();\n  const [lngLat, setLngLat] = useState<Coordinate>([]);\n  const [handlerName, setHandlerName] = useState<string | null>(null);\n\n  const allQueriesDoneListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsAllQueriesDone(payload)) {\n      const { resultSets } = payload as TypeAllQueriesDonePayload;\n      const newDetails: TypeArrayOfLayerData = [];\n      Object.keys(resultSets).forEach((layerPath) => {\n        const layerName = getLocalizedValue(api.maps[mapId].layer.registeredLayers[layerPath].layerName, mapId)!;\n        const features = resultSets[layerPath]?.data;\n        if (features?.length && features?.length > 0) {\n          newDetails.push({ layerPath, layerName, features });\n        }\n      });\n      if (newDetails.length > 0) {\n        setDetails(newDetails);\n      } else {\n        setDetails([]);\n      }\n    } else {\n      setDetails([]);\n    }\n  };\n\n  const eventMapSingleClickListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsAMapMouseEvent(payload)) {\n      const { coordinates } = payload as MapMouseEventPayload;\n      setHandlerName(payload.handlerName);\n      setLngLat(coordinates.lnglat);\n    } else {\n      setLngLat([]);\n    }\n  };\n\n  useEffect(() => {\n    // create the listener to return the details\n    api.event.on(api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE, allQueriesDoneListenerFunction, `${mapId}/FeatureInfoLayerSet`);\n    api.event.on(api.eventNames.MAP.EVENT_MAP_SINGLE_CLICK, eventMapSingleClickListenerFunction, mapId);\n    return () => {\n      api.event.off(api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE, mapId, allQueriesDoneListenerFunction);\n      api.event.off(api.eventNames.MAP.EVENT_MAP_SINGLE_CLICK, mapId, eventMapSingleClickListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // once page loads, details is empty array based on the useState we defined\n    // we need to create details if we click on a map and single click event triggered, then we have array of layers that is details\n    // if (details.length > 0) {\n    setList(api.maps[mapId].detailsFooter.createDetailsFooter(mapId, details, { mapId, location: lngLat, handlerName }));\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [details, lngLat]);\n\n  return <div>{list}</div>;\n}\n","/* eslint-disable react/require-default-props */\nimport type React from 'react';\nimport { TypeWindow, payloadIsALayerConfig, payloadIsRemoveGeoViewLayer } from 'geoview-core';\nimport { LayerConfigPayload, PayloadBaseClass, TypeRemoveGeoviewLayerPayload } from 'geoview-core/src/api/events/payloads';\n\ninterface Props {\n  mapId: string;\n}\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the legend component\n *\n * @returns {JSX.Element} created legend component\n */\nexport function LegendItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [legend, setLegend] = useState<React.DetailedReactHTMLElement<{}, HTMLElement>>();\n  const [mapLayers, setMapLayers] = useState<string[]>([]);\n\n  const updateLayers = () => {\n    if (api.maps[mapId].layer?.layerOrder !== undefined) setMapLayers([...api.maps[mapId].layer.layerOrder].reverse());\n  };\n\n  const eventMapLoadedListenerFunction = () => updateLayers();\n  const eventRemoveLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsRemoveGeoViewLayer(payload)) {\n      setMapLayers((orderedLayers) =>\n        orderedLayers.filter((layerId) => layerId !== (payload as TypeRemoveGeoviewLayerPayload).geoviewLayer.geoviewLayerId)\n      );\n    }\n  };\n\n  const eventAddLayerListenerFunction = (payload: PayloadBaseClass) => {\n    if (payloadIsALayerConfig(payload)) {\n      api.event.on(\n        api.eventNames.LAYER.EVENT_LAYER_ADDED,\n        () => {\n          updateLayers();\n          api.event.off(api.eventNames.LAYER.EVENT_LAYER_ADDED, `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`);\n        },\n        `${mapId}/${(payload as LayerConfigPayload).layerConfig.geoviewLayerId}`\n      );\n    }\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, eventMapLoadedListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_REMOVE_LAYER, eventRemoveLayerListenerFunction, mapId);\n    api.event.on(api.eventNames.LAYER.EVENT_ADD_LAYER, eventAddLayerListenerFunction, mapId);\n\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, eventMapLoadedListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_REMOVE_LAYER, mapId, eventRemoveLayerListenerFunction);\n      api.event.off(api.eventNames.LAYER.EVENT_ADD_LAYER, mapId, eventAddLayerListenerFunction);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLegend(api.maps[mapId].legend.createLegend({ layerIds: mapLayers, isRemoveable: false, canSetOpacity: true, canZoomTo: true }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapLayers]);\n\n  return <div>{legend}</div>;\n}\n","import type React from 'react';\nimport { TypeWindow } from 'geoview-core';\n\ninterface DataTableProps {\n  mapId: string;\n}\n\nconst w = window as TypeWindow;\n\n/**\n * Create the datatable that displays in footer panel.\n *\n * @returns {JSX.Element} created data table component\n */\n\nexport function DataTable({ mapId }: DataTableProps) {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n  const { useState, useEffect } = react;\n\n  const [table, setTable] = useState(null);\n\n  /**\n   * Create data table from geo view layers.\n   */\n  const createDataTable = async () => {\n    const data = await cgpv.api.maps[mapId].dataTable.createDataPanel();\n    setTable(data);\n  };\n\n  /**\n   * get the table after map is loaded and timeout has been passed.\n   */\n  const getDataTable = () => {\n    setTimeout(() => {\n      createDataTable();\n    }, 1000);\n  };\n\n  useEffect(() => {\n    api.event.on(api.eventNames.MAP.EVENT_MAP_LOADED, getDataTable, mapId);\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId, getDataTable);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div>{table}</div>;\n}\n","import {\n  Cast,\n  AbstractPlugin,\n  TypePluginOptions,\n  TypeButtonPanel,\n  TypeWindow,\n  toJsonObject,\n  TypeJsonObject,\n  AnySchemaObject,\n  payloadIsAllQueriesDone,\n  TypeArrayOfFeatureInfoEntries,\n  PayloadBaseClass,\n} from 'geoview-core';\n\nimport schema from '../schema.json';\nimport defaultConfig from '../default-config-footer-panel.json';\nimport { DetailsItem } from './details-item';\nimport { LegendItem } from './legend-item';\nimport { DataTable } from './data-table';\n\nconst w = window as TypeWindow;\n\ntype CustomTabs = {\n  title: string;\n  contentHTML: string;\n};\n\n/**\n * Create a class for the plugin instance\n */\nclass FooterPanelPlugin extends AbstractPlugin {\n  // store the created button panel object\n  buttonPanel: TypeButtonPanel | null;\n\n  constructor(pluginId: string, props: TypePluginOptions) {\n    super(pluginId, props);\n    this.buttonPanel = null;\n  }\n\n  /**\n   * Return the package schema\n   *\n   * @returns {AnySchemaObject} the package schema\n   */\n  schema = (): AnySchemaObject => schema;\n\n  /**\n   * Return the default config for this package\n   *\n   * @returns {TypeJsonObject} the default config\n   */\n  defaultConfig = (): TypeJsonObject => toJsonObject(defaultConfig);\n\n  /**\n   * translations object to inject to the viewer translations\n   */\n  translations = toJsonObject({\n    en: {\n      legend: 'Legend',\n      details: 'Details',\n      dataTable: 'DataTable',\n    },\n    fr: {\n      legend: 'Légende',\n      details: 'Détails',\n      dataTable: 'Données',\n    },\n  });\n\n  /**\n   * Added function called after the plugin has been initialized\n   */\n  added = (): void => {\n    const { configObj, pluginProps } = this as AbstractPlugin;\n\n    const { mapId } = pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      const { api } = cgpv;\n      const { displayLanguage, footerTabs, map } = api.maps[mapId];\n\n      const mapContainer = map.getTargetElement().parentElement;\n      // Set size of map container based on whether footer-panel is collapsed or not\n      if (mapContainer) {\n        if (configObj?.collapsed === false) {\n          mapContainer.style.height = 'calc( 100% - 300px )';\n        } else {\n          mapContainer.style.height = 'calc( 100% - 55px )';\n        }\n      }\n\n      const defaultTabs = configObj?.tabs.defaultTabs as Array<string>;\n      let tabsCounter = 0;\n\n      if (defaultTabs.includes('legend')) {\n        // create new tab and add the LegendComponent to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].legend as string,\n          content: () => <LegendItem mapId={mapId} />,\n        });\n        tabsCounter++;\n      }\n\n      // create the listener to return the details\n      if (defaultTabs.includes('details')) {\n        // create new tab and add the DetailComponent to the footer tab\n        const detailsTabValue = tabsCounter;\n        footerTabs.createFooterTab({\n          value: detailsTabValue,\n          label: this.translations[displayLanguage].details as string,\n          content: () => <DetailsItem mapId={mapId} />,\n        });\n        tabsCounter++;\n        // select the details tab when map click queries are done\n        api.event.on(\n          api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE,\n          (payload: PayloadBaseClass) => {\n            if (payloadIsAllQueriesDone(payload)) {\n              const { resultSets } = payload;\n              let features: TypeArrayOfFeatureInfoEntries = [];\n              Object.keys(resultSets).forEach((layerPath) => {\n                features = features.concat(resultSets[layerPath]!);\n              });\n              if (features.length > 0) {\n                footerTabs.selectFooterTab(detailsTabValue);\n              }\n            }\n          },\n          `${mapId}/FeatureInfoLayerSet`\n        );\n      }\n\n      if (defaultTabs.includes('data-table')) {\n        /// create new tab and add the DataTable Component to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].dataTable as string,\n          content: () => <DataTable mapId={mapId} />,\n        });\n        tabsCounter++;\n      }\n\n      // TODO add custom detail reusable component when done\n\n      const customTabs = configObj?.tabs.customTabs as Array<string>;\n      for (let i = 0; i < customTabs.length; i++) {\n        const tab = customTabs[i] as unknown as CustomTabs;\n\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: tab.title,\n          content: tab.contentHTML,\n        });\n        tabsCounter++;\n      }\n    }\n  };\n\n  /**\n   * Function called when the plugin is removed, used for clean up\n   */\n  removed(): void {\n    // const { mapId } = this.pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      // const { api } = cgpv;\n      // TODO: Enable the footer tabs removal\n    }\n  }\n}\n\nexport default FooterPanelPlugin;\n\nw.plugins = w.plugins || {};\nw.plugins['footer-panel'] = Cast<AbstractPlugin>(FooterPanelPlugin);\n"],"names":["w","window","DetailsItem","_ref","mapId","cgpv","api","react","useState","useEffect","_useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","list","setList","_useState5","_useState6","lngLat","setLngLat","_useState7","_useState8","handlerName","setHandlerName","allQueriesDoneListenerFunction","payload","payloadIsAllQueriesDone","resultSets","newDetails","Object","keys","forEach","layerPath","_resultSets$layerPath","layerName","getLocalizedValue","maps","layer","registeredLayers","features","data","length","push","eventMapSingleClickListenerFunction","payloadIsAMapMouseEvent","coordinates","lnglat","event","on","eventNames","GET_FEATURE_INFO","ALL_QUERIES_DONE","concat","MAP","EVENT_MAP_SINGLE_CLICK","off","detailsFooter","createDetailsFooter","location","_jsx","children","LegendItem","legend","setLegend","mapLayers","setMapLayers","updateLayers","_api$maps$mapId$layer","undefined","layerOrder","_toConsumableArray","reverse","eventMapLoadedListenerFunction","eventRemoveLayerListenerFunction","payloadIsRemoveGeoViewLayer","orderedLayers","filter","layerId","geoviewLayer","geoviewLayerId","eventAddLayerListenerFunction","payloadIsALayerConfig","LAYER","EVENT_LAYER_ADDED","layerConfig","EVENT_MAP_LOADED","EVENT_REMOVE_LAYER","EVENT_ADD_LAYER","createLegend","layerIds","isRemoveable","canSetOpacity","canZoomTo","DataTable","table","setTable","createDataTable","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","dataTable","createDataPanel","sent","stop","apply","arguments","getDataTable","setTimeout","FooterPanelPlugin","_AbstractPlugin","_inherits","_super","_createSuper","pluginId","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","schema","toJsonObject","defaultConfig","en","fr","configObj","pluginProps","_api$maps$mapId","displayLanguage","footerTabs","mapContainer","map","getTargetElement","parentElement","collapsed","style","height","defaultTabs","tabs","tabsCounter","includes","createFooterTab","value","label","translations","content","detailsTabValue","selectFooterTab","customTabs","i","tab","title","contentHTML","buttonPanel","_createClass","key","AbstractPlugin","plugins","Cast"],"sourceRoot":""}