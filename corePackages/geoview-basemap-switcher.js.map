{"version":3,"file":"corePackages/geoview-basemap-switcher.js","mappings":"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","sources":["webpack://geoview-core/../geoview-basemap-switcher/src/basemap-switcher.tsx","webpack://geoview-core/../geoview-basemap-switcher/src/index.tsx"],"sourcesContent":["import { TypeBasemapProps, TypeWindow } from 'geoview-core';\r\n\r\nconst w = window as TypeWindow;\r\n\r\ninterface BaseMapSwitcherProps {\r\n  mapId: string;\r\n}\r\n\r\nexport function BasemapSwitcher(props: BaseMapSwitcherProps): JSX.Element {\r\n  const { mapId } = props;\r\n\r\n  const { cgpv } = w;\r\n\r\n  const { api, react, ui, useTranslation } = cgpv;\r\n\r\n  const { useState, useEffect } = react;\r\n\r\n  const useStyles = ui.makeStyles(() => ({\r\n    listContainer: {\r\n      overflowY: 'scroll',\r\n      height: '600px',\r\n    },\r\n    card: {\r\n      boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)',\r\n      transition: '0.3s',\r\n      borderRadius: '5px',\r\n      '&:hover': {\r\n        boxShadow: '0 8px 16px 0 rgba(0, 0, 0, 0.2)',\r\n      },\r\n      marginBottom: 10,\r\n      height: '120px',\r\n      width: '100%',\r\n      display: 'block',\r\n      position: 'relative',\r\n    },\r\n    thumbnail: {\r\n      borderRadius: '5px',\r\n      position: 'absolute',\r\n      height: '100%',\r\n      width: '100%',\r\n      opacity: 0.8,\r\n    },\r\n    container: {\r\n      background: 'rgba(0,0,0,.68)',\r\n      color: '#fff',\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      height: '40px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: '0 5px',\r\n      boxSizing: 'border-box',\r\n      position: 'absolute',\r\n      left: 0,\r\n      bottom: 0,\r\n      width: 'inherit',\r\n    },\r\n  }));\r\n\r\n  const [basemapList, setBasemapList] = useState<TypeBasemapProps[]>([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  /**\r\n   * Create a new basemap\r\n   *\r\n   * @param {string} id the id of the basemap to be created\r\n   * @param {Object} basemapProps basemap properties\r\n   */\r\n  const createBasemap = (id: string, basemapProps: TypeBasemapProps) => {\r\n    const { basemaps } = api.map(mapId).basemap;\r\n\r\n    // check if basemap with provided ID exists\r\n    const exists = basemaps.filter((basemap: TypeBasemapProps) => basemap.id === id);\r\n\r\n    // if basemap does not exist then create a new one\r\n    if (exists.length === 0) {\r\n      const basemap = { ...basemapProps, id };\r\n\r\n      // create the basemap\r\n      api.map(mapId).basemap.createBasemap(basemap);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update the basemap with the layers on the map\r\n   *\r\n   * @param {string} id update the basemap on the map\r\n   */\r\n  const setBasemap = (id: string) => {\r\n    api.map(mapId).basemap.setBasemap(id);\r\n  };\r\n\r\n  /**\r\n   * load existing basemaps and create new basemaps\r\n   */\r\n  useEffect(() => {\r\n    // get existing basemaps\r\n    const { basemaps } = api.map(mapId).basemap;\r\n\r\n    // set the basemaps in the list\r\n    setBasemapList(basemaps);\r\n\r\n    // create a new basemap with transport and label layers\r\n    createBasemap('transportWithLabels', {\r\n      name: t('basemap-transport-label.name'),\r\n      type: 'transport_label',\r\n      description:\r\n        'This Canadian basemap provides geographic context with bilingual labels and an emphasis on transportation networks. From Natural Resources Canada.',\r\n      descSummary: '',\r\n      altText: t('basemap-transport-label.name'),\r\n      thumbnailUrl: '',\r\n      layers: [\r\n        {\r\n          id: 'transport',\r\n          type: 'transport',\r\n          url: 'https://geoappext.nrcan.gc.ca/arcgis/rest/services/BaseMaps/CBMT_CBCT_GEOM_3978/MapServer/WMTS/tile/1.0.0/CBMT_CBCT_GEOM_3978/default/default028mm/{z}/{y}/{x}.jpg',\r\n          opacity: 1,\r\n          basemapPaneName: 'transport',\r\n          options: {\r\n            tms: false,\r\n            tileSize: 1,\r\n            noWrap: false,\r\n            attribution: false,\r\n          },\r\n        },\r\n        {\r\n          id: 'label',\r\n          type: 'label',\r\n          url: 'https://geoappext.nrcan.gc.ca/arcgis/rest/services/BaseMaps/xxxx_TXT_3978/MapServer/WMTS/tile/1.0.0/xxxx_TXT_3978/default/default028mm/{z}/{y}/{x}.jpg'.replaceAll(\r\n            'xxxx',\r\n            t('layer.type')\r\n          ),\r\n          opacity: 1,\r\n          basemapPaneName: 'label',\r\n          options: {\r\n            tms: false,\r\n            tileSize: 1,\r\n            noWrap: false,\r\n            attribution: false,\r\n          },\r\n        },\r\n      ],\r\n      attribution: 'test attribution',\r\n      zoomLevels: {\r\n        min: 0,\r\n        max: 0,\r\n      },\r\n    });\r\n\r\n    // create a new basemap with only transport layer\r\n    createBasemap('transportWithNoLabels', {\r\n      name: t('basemap-transport.name'),\r\n      type: 'transport',\r\n      description:\r\n        'This Canadian basemap provides geographic context that emphasis on transportation networks. From Natural Resources Canada.',\r\n      descSummary: '',\r\n      altText: t('basemap-transport.name'),\r\n      thumbnailUrl: '',\r\n      layers: [\r\n        {\r\n          id: 'transport',\r\n          type: 'transport',\r\n          url: 'https://geoappext.nrcan.gc.ca/arcgis/rest/services/BaseMaps/CBMT_CBCT_GEOM_3978/MapServer/WMTS/tile/1.0.0/CBMT_CBCT_GEOM_3978/default/default028mm/{z}/{y}/{x}.jpg',\r\n          opacity: 1,\r\n          basemapPaneName: 'transport',\r\n          options: {\r\n            tms: false,\r\n            tileSize: 1,\r\n            noWrap: false,\r\n            attribution: false,\r\n          },\r\n        },\r\n      ],\r\n      attribution: 'test attribution',\r\n      zoomLevels: {\r\n        min: 0,\r\n        max: 0,\r\n      },\r\n    });\r\n\r\n    // create a new basemap with shaded relief layer\r\n    createBasemap('shadedRelief', {\r\n      name: t('basemap-shaded.name'),\r\n      type: 'shaded',\r\n      description: '\":\"This Canadian base map provides geographic context using shaded relief. From Natural Resources Canada.',\r\n      descSummary: '',\r\n      altText: t('basemap-shaded.name'),\r\n      thumbnailUrl: '',\r\n      layers: [\r\n        {\r\n          id: 'shaded',\r\n          type: 'shaded',\r\n          url: 'https://geoappext.nrcan.gc.ca/arcgis/rest/services/BaseMaps/CBME_CBCE_HS_RO_3978/MapServer/WMTS/tile/1.0.0/CBMT_CBCT_GEOM_3978/default/default028mm/{z}/{y}/{x}.jpg',\r\n          opacity: 1,\r\n          basemapPaneName: 'shaded',\r\n          options: {\r\n            tms: false,\r\n            tileSize: 1,\r\n            noWrap: false,\r\n            attribution: false,\r\n          },\r\n        },\r\n      ],\r\n      attribution: 'test attribution',\r\n      zoomLevels: {\r\n        min: 0,\r\n        max: 0,\r\n      },\r\n    });\r\n\r\n    // create a new basemap with shaded relief and labels layer\r\n    createBasemap('shadedLabel', {\r\n      name: t('basemap-shaded-label.name'),\r\n      type: 'shaded_label',\r\n      description: '\":\"This Canadian base map provides geographic context using shaded relief with labels. From Natural Resources Canada.',\r\n      descSummary: '',\r\n      altText: t('basemap-shaded-label.name'),\r\n      thumbnailUrl: '',\r\n      layers: [\r\n        {\r\n          id: 'shaded',\r\n          type: 'shaded',\r\n          url: 'https://geoappext.nrcan.gc.ca/arcgis/rest/services/BaseMaps/CBME_CBCE_HS_RO_3978/MapServer/WMTS/tile/1.0.0/CBMT_CBCT_GEOM_3978/default/default028mm/{z}/{y}/{x}.jpg',\r\n          opacity: 1,\r\n          basemapPaneName: 'shaded',\r\n          options: {\r\n            tms: false,\r\n            tileSize: 1,\r\n            noWrap: false,\r\n            attribution: false,\r\n          },\r\n        },\r\n        {\r\n          id: 'label',\r\n          type: 'label',\r\n          url: 'https://geoappext.nrcan.gc.ca/arcgis/rest/services/BaseMaps/xxxx_TXT_3978/MapServer/WMTS/tile/1.0.0/xxxx_TXT_3978/default/default028mm/{z}/{y}/{x}.jpg'.replaceAll(\r\n            'xxxx',\r\n            t('layer.type')\r\n          ),\r\n          opacity: 1,\r\n          basemapPaneName: 'label',\r\n          options: {\r\n            tms: false,\r\n            tileSize: 1,\r\n            noWrap: false,\r\n            attribution: false,\r\n          },\r\n        },\r\n      ],\r\n      attribution: 'test attribution',\r\n      zoomLevels: {\r\n        min: 0,\r\n        max: 0,\r\n      },\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.listContainer}>\r\n      {basemapList.map((basemap: TypeBasemapProps) => {\r\n        return (\r\n          <div\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            className={classes.card}\r\n            onClick={() => setBasemap(basemap.id as string)}\r\n            onKeyPress={() => setBasemap(basemap.id as string)}\r\n            key={basemap.id}\r\n          >\r\n            {typeof basemap.thumbnailUrl === 'string' && (\r\n              <img src={basemap.thumbnailUrl} alt={basemap.altText} className={classes.thumbnail} />\r\n            )}\r\n            {Array.isArray(basemap.thumbnailUrl) &&\r\n              basemap.thumbnailUrl.map((thumbnail, index) => {\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                return <img key={index} src={thumbnail} alt={basemap.altText} className={classes.thumbnail} />;\r\n              })}\r\n            <div className={classes.container}>{basemap.name}</div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Cast,\r\n  AbstractPluginClass,\r\n  TypePluginOptions,\r\n  TypeButtonProps,\r\n  TypeButtonPanel,\r\n  TypeWindow,\r\n  toJsonObject,\r\n  TypePanelProps,\r\n} from 'geoview-core';\r\nimport { BasemapSwitcher } from './basemap-switcher';\r\n\r\nconst w = window as TypeWindow;\r\n\r\n/**\r\n * Create a class for the plugin instance\r\n */\r\nclass BasemapSwitcherPlugin extends AbstractPluginClass {\r\n  // store the created button panel object\r\n  buttonPanel: TypeButtonPanel | null;\r\n\r\n  constructor(id: string, props: TypePluginOptions) {\r\n    super(id, props);\r\n    this.buttonPanel = null;\r\n  }\r\n\r\n  /**\r\n   * translations object to inject to the viewer translations\r\n   */\r\n  translations = toJsonObject({\r\n    'en-CA': {\r\n      basemapSwitcher: 'Basemaps',\r\n      'basemap-transport-label': {\r\n        name: 'Transport with Labels',\r\n        desc: '',\r\n      },\r\n      'basemap-transport': {\r\n        name: 'Transport without labels',\r\n        desc: '',\r\n      },\r\n      'basemap-shaded': {\r\n        name: 'Shaded Relief',\r\n        desc: '',\r\n      },\r\n      'basemap-shaded-label': {\r\n        name: 'Shaded Relief with Labels',\r\n        desc: '',\r\n      },\r\n      layer: {\r\n        type: 'CBMT',\r\n      },\r\n    },\r\n    'fr-CA': {\r\n      basemapSwitcher: 'Fond de carte',\r\n      'basemap-transport-label': {\r\n        name: 'Transport avec des étiquettes',\r\n        desc: '',\r\n      },\r\n      'basemap-transport': {\r\n        name: 'Transport sans étiquettes',\r\n        desc: '',\r\n      },\r\n      'basemap-shaded': {\r\n        name: 'Relief ombré',\r\n        desc: '',\r\n      },\r\n      'basemap-shaded-label': {\r\n        name: 'Relief ombré avec étiquettes',\r\n        desc: '',\r\n      },\r\n\r\n      layer: {\r\n        type: 'CBCT',\r\n      },\r\n    },\r\n  });\r\n\r\n  /**\r\n   * Added function called after the plugin has been initialized\r\n   */\r\n  added = (): void => {\r\n    const { mapId } = this.pluginProps;\r\n\r\n    // access the cgpv object from the window object\r\n    const { cgpv } = w;\r\n\r\n    if (cgpv) {\r\n      // access the api calls\r\n      const { api } = cgpv;\r\n\r\n      const { language } = api.map(mapId);\r\n\r\n      // button props\r\n      const button: TypeButtonProps = {\r\n        tooltip: this.translations[language].basemapSwitcher as string,\r\n        tooltipPlacement: 'right',\r\n        icon: '<i class=\"material-icons\">map</i>',\r\n        type: 'textWithIcon',\r\n      };\r\n\r\n      // panel props\r\n      const panel: TypePanelProps = {\r\n        title: this.translations[language].basemapSwitcher,\r\n        icon: '<i class=\"material-icons\">map</i>',\r\n        width: 200,\r\n      };\r\n\r\n      // create a new button panel on the appbar\r\n      this.buttonPanel = api.map(mapId).appBarButtons.createAppbarPanel(button, panel, null);\r\n\r\n      // set panel content\r\n      this.buttonPanel?.panel?.changeContent(<BasemapSwitcher mapId={mapId} />);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function called when the plugin is removed, used for clean up\r\n   */\r\n  removed(): void {\r\n    const { mapId } = this.pluginProps;\r\n\r\n    // access the cgpv object from the window object\r\n    const { cgpv } = w;\r\n\r\n    if (cgpv) {\r\n      // access the api calls\r\n      const { api } = cgpv;\r\n\r\n      if (this.buttonPanel) {\r\n        api.map(mapId).appBarButtons.removeAppbarPanel(this.buttonPanel.id);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default BasemapSwitcherPlugin;\r\n\r\nw.plugins = w.plugins || {};\r\nw.plugins['basemap-switcher'] = Cast<AbstractPluginClass>(BasemapSwitcherPlugin);\r\n"],"names":["w","window","BasemapSwitcher","props","mapId","cgpv","api","react","ui","useTranslation","useState","useEffect","useStyles","makeStyles","listContainer","overflowY","height","card","boxShadow","transition","borderRadius","marginBottom","width","display","position","thumbnail","opacity","container","background","color","overflow","textOverflow","alignItems","padding","boxSizing","left","bottom","basemapList","setBasemapList","classes","t","createBasemap","id","basemapProps","exists","map","basemap","basemaps","filter","length","setBasemap","name","type","description","descSummary","altText","thumbnailUrl","layers","url","basemapPaneName","options","tms","tileSize","noWrap","attribution","replaceAll","zoomLevels","min","max","className","role","tabIndex","onClick","onKeyPress","src","alt","Array","isArray","index","BasemapSwitcherPlugin","toJsonObject","basemapSwitcher","desc","layer","pluginProps","language","button","tooltip","translations","tooltipPlacement","icon","panel","title","buttonPanel","appBarButtons","createAppbarPanel","changeContent","this","removeAppbarPanel","AbstractPluginClass","plugins","Cast"],"sourceRoot":""}