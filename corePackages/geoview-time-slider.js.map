{"version":3,"file":"corePackages/geoview-time-slider.js","mappings":"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","sources":["webpack://geoview-core/./src/api/plugin/footer-plugin.ts","webpack://geoview-core/../../common/temp/node_modules/.pnpm/@mui+material@5.15.17_@emotion+react@11.11.4_@emotion+styled@11.11.5_@types+react@18.3.2_react-dom@18.3.1_react@18.3.1/node_modules/@mui/material/NativeSelect/NativeSelect.js","webpack://geoview-core/../geoview-time-slider/src/time-slider-style.ts","webpack://geoview-core/../geoview-time-slider/src/time-slider.tsx","webpack://geoview-core/../geoview-time-slider/src/time-slider-panel.tsx","webpack://geoview-core/../geoview-time-slider/src/index.tsx"],"sourcesContent":["import { TypeTabs } from '@/ui/tabs/tabs';\nimport { AbstractPlugin } from './abstract-plugin';\nimport { logger } from '@/core/utils/logger';\n\n/** ******************************************************************************************************************************\n * Footer Plugin abstract class.\n */\nexport abstract class FooterPlugin extends AbstractPlugin {\n  // Store index of tab\n  value?: number;\n\n  // Store the footer props\n  footerProps?: TypeTabs;\n\n  /**\n   * Overridable function to create footer props content\n   * @returns TypeTabs The footer props content\n   */\n  onCreateContentProps(): TypeTabs {\n    // Override this to create the footer props..\n\n    // Return dummy content\n    return {\n      id: 'some-id',\n      value: this.value!,\n      label: 'Some label',\n      content: `<div>Content for Footer plugin on map id ${this.pluginProps.mapId} goes here...</div>`,\n    };\n  }\n\n  /**\n   * Called when a footer plugin is being added\n   */\n  onAdd(): void {\n    // Log\n    // No need to log, parent class does it well already via added() function.\n\n    // Set value to length of tabs(?)\n    this.value = this.mapViewer().footerBarApi.tabs.length;\n\n    // Create props\n    this.footerProps = this.onCreateContentProps();\n\n    // Create tab with the props\n    this.mapViewer().footerBarApi.createTab(this.footerProps);\n  }\n\n  /**\n   * Called when a footer plugin is being removed\n   */\n  onRemove(): void {\n    // Log\n    // No need to log, parent class does it well already via removed() function.\n\n    // Remove the footer tab\n    if (this.value) this.mapViewer().footerBarApi.removeTab(this.footerProps!.id);\n  }\n\n  /**\n   * Called when a footer plugin has been selected in the tabs\n   */\n  // Added eslint-disable here, because we do want to override this method in children and keep 'this'.\n  // eslint-disable-next-line @typescript-eslint/class-methods-use-this\n  onSelected(): void {\n    // Log\n    logger.logTraceCore('FOOTER-PLUGIN - onSelected');\n\n    // TODO: Refactor - Move 'onSelected' in AbstractPlugin class so that AppBar can eventually benefit as well?\n\n    // Nothing else here.. but inherited FooterPlugins might override this method to do stuff when they are selected!\n  }\n}\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\", \"classes\", \"IconComponent\", \"input\", \"inputProps\", \"variant\"],\n  _excluded2 = [\"root\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport NativeSelectInput from './NativeSelectInput';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport Input from '../Input';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getNativeSelectUtilityClasses } from './nativeSelectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getNativeSelectUtilityClasses, classes);\n};\nconst defaultInput = /*#__PURE__*/_jsx(Input, {});\n/**\n * An alternative to `<Select native />` with a much smaller bundle size footprint.\n */\nconst NativeSelect = /*#__PURE__*/React.forwardRef(function NativeSelect(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiNativeSelect',\n    props: inProps\n  });\n  const {\n      className,\n      children,\n      classes: classesProp = {},\n      IconComponent = ArrowDropDownIcon,\n      input = defaultInput,\n      inputProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant']\n  });\n  const ownerState = _extends({}, props, {\n    classes: classesProp\n  });\n  const classes = useUtilityClasses(ownerState);\n  const otherClasses = _objectWithoutPropertiesLoose(classesProp, _excluded2);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(input, _extends({\n      // Most of the logic is implemented in `NativeSelectInput`.\n      // The `Select` component is a simple API wrapper to expose something better to play with.\n      inputComponent: NativeSelectInput,\n      inputProps: _extends({\n        children,\n        classes: otherClasses,\n        IconComponent,\n        variant: fcs.variant,\n        type: undefined\n      }, inputProps, input ? input.props.inputProps : {}),\n      ref\n    }, other, {\n      className: clsx(classes.root, input.props.className, className)\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelect.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * @default {}\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon that displays the arrow.\n   * @default ArrowDropDownIcon\n   */\n  IconComponent: PropTypes.elementType,\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   * @default <Input />\n   */\n  input: PropTypes.element,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `input` value. The DOM API casts this to a string.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nNativeSelect.muiName = 'Select';\nexport default NativeSelect;","import { Theme } from '@mui/material/styles';\n\n// ? I doubt we want to define an explicit type for style properties?\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getSxClasses = (theme: Theme): any => ({\n  panelHeaders: {\n    fontSize: theme.palette.geoViewFontSize.lg,\n    fontWeight: '600',\n    marginBottom: '20px',\n  },\n  rightPanelBtnHolder: {\n    marginTop: '20px',\n    marginBottom: '9px',\n    boxShadow: '0px 12px 9px -13px #E0E0E0',\n  },\n  timeSliderInstructionsTitle: {\n    fontSize: theme.palette.geoViewFontSize.lg,\n    fontWeight: '600',\n    lineHeight: '1.5em',\n  },\n  timeSliderInstructionsBody: {\n    fontSize: '1rem',\n  },\n});\n","import { useTheme } from '@mui/material/styles';\nimport { FormControl, InputLabel, NativeSelect } from '@mui/material';\nimport {\n  useTimeSliderLayers,\n  useTimeSliderStoreActions,\n} from 'geoview-core/src/core/stores/store-interface-and-intial-values/time-slider-state';\nimport { getLocalizedValue, getLocalizedMessage } from 'geoview-core/src/core/utils/utilities';\nimport { useAppDisplayLanguage } from 'geoview-core/src/core/stores/store-interface-and-intial-values/app-state';\nimport { logger } from 'geoview-core/src/core/utils/logger';\n\nimport { getSxClasses } from './time-slider-style';\nimport { ConfigProps } from './time-slider-types';\n\ninterface TimeSliderProps {\n  config: ConfigProps;\n  mapId: string;\n  layerPath: string;\n}\n\n/**\n * Creates a panel with time sliders\n *\n * @param {TimeSliderProps} props - Time slider properties\n * @returns {JSX.Element} the slider panel\n */\nexport function TimeSlider(props: TimeSliderProps): JSX.Element {\n  // Log\n  logger.logTraceRender('geoview-time-slider/time-slider', props);\n\n  const { cgpv } = window;\n  const { config, layerPath, mapId } = props;\n  const { react, ui } = cgpv;\n  const { useState, useRef, useEffect, useCallback } = react;\n  const {\n    Grid,\n    Slider,\n    Typography,\n    Checkbox,\n    Tooltip,\n    IconButton,\n    LockIcon,\n    LockOpenIcon,\n    ArrowLeftIcon,\n    PlayArrowIcon,\n    PauseIcon,\n    ArrowRightIcon,\n    SwitchRightIcon,\n    SwitchLeftIcon,\n  } = ui.elements;\n\n  const theme = useTheme();\n  const sxClasses = getSxClasses(theme);\n\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n  const playIntervalRef = useRef<number>();\n\n  // References for play button\n  const sliderValueRef = useRef<number>();\n  const sliderDeltaRef = useRef<number>();\n\n  // Get actions and states from store\n  // TODO: evaluate best option to set value by layer path.... trough a getter?\n  const { setTitle, setDefaultValue, setDescription, setValues, setLocked, setReversed, setDelay, setFiltering } =\n    useTimeSliderStoreActions();\n  const displayLanguage = useAppDisplayLanguage();\n\n  // TODO: check performance as we should technically have one selector by constant\n  const {\n    title,\n    description,\n    name,\n    defaultValue,\n    discreteValues,\n    range,\n    minAndMax,\n    field,\n    fieldAlias,\n    filtering,\n    singleHandle,\n    values,\n    delay,\n    locked,\n    reversed,\n  } = useTimeSliderLayers()[layerPath];\n\n  // slider config\n  useEffect(() => {\n    // Log\n    logger.logTraceUseEffect('TIME-SLIDER - mount');\n\n    // TODO: add mechanism to initialize these values during store onInitialize\n    const sliderConfig = config?.sliders?.find((o: { layerPaths: string[] }) => o.layerPaths.includes(layerPath));\n    if (title === undefined) setTitle(layerPath, getLocalizedValue(sliderConfig?.title, displayLanguage) || '');\n    if (description === undefined) setDescription(layerPath, getLocalizedValue(sliderConfig?.description, displayLanguage) || '');\n    if (locked === undefined) setLocked(layerPath, sliderConfig?.locked !== undefined ? sliderConfig?.locked : false);\n    if (reversed === undefined) setReversed(layerPath, sliderConfig?.reversed !== undefined ? sliderConfig?.reversed : false);\n    if (defaultValue === undefined) setDefaultValue(layerPath, sliderConfig?.defaultValue || '');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // Log\n    logger.logTraceUseEffect('TIME-SLIDER - config layerPath', config, layerPath);\n\n    const sliderConfig = config?.sliders?.find((o: { layerPaths: string[] }) => o.layerPaths.includes(layerPath));\n    if (sliderConfig?.defaultValue) {\n      // update values based on slider's default value\n      const defaultValueIsArray = Array.isArray(sliderConfig?.defaultValue);\n      if (defaultValueIsArray) {\n        setValues(layerPath, [new Date(sliderConfig?.defaultValue[0]).getTime(), new Date(sliderConfig?.defaultValue[1]).getTime()]);\n      } else if (range.includes(sliderConfig?.defaultValue)) {\n        setValues(layerPath, [new Date(sliderConfig?.defaultValue).getTime()]);\n      } else {\n        setValues(layerPath, [new Date(range[0]).getTime()]);\n      }\n    }\n  }, [config, layerPath, range, setFiltering, setValues]);\n\n  const timeStampRange = range.map((entry: string | number | Date) => new Date(entry).getTime());\n  // Check if range occurs in a single day or year\n  const timeDelta = minAndMax[1] - minAndMax[0];\n  const dayDelta = new Date(minAndMax[1]).getDate() - new Date(minAndMax[0]).getDate();\n  const yearDelta = new Date(minAndMax[1]).getFullYear() - new Date(minAndMax[0]).getFullYear();\n  let timeframe: string | undefined;\n  if (dayDelta === 0 && timeDelta < 86400000) timeframe = 'day';\n  else if (yearDelta === 0) timeframe = 'year';\n\n  let timeMarks: number[] = [];\n  if (range.length < 4 && discreteValues) {\n    const interval = (new Date(range[range.length - 1]).getTime() - new Date(range[0]).getTime()) / 4;\n    timeMarks = [minAndMax[0], minAndMax[0] + interval, minAndMax[0] + interval * 2, minAndMax[0] + interval * 3, minAndMax[1]];\n  } else if (range.length < 6 || singleHandle) timeMarks = timeStampRange;\n  else {\n    timeMarks = [\n      minAndMax[0],\n      new Date(range[Math.round(range.length / 4)]).getTime(),\n      new Date(range[Math.round(range.length / 2)]).getTime(),\n      new Date(range[Math.round((3 * range.length) / 4)]).getTime(),\n      minAndMax[1],\n    ];\n  }\n\n  const sliderMarks = [];\n  for (let i = 0; i < timeMarks.length; i++) {\n    sliderMarks.push({\n      value: timeMarks[i],\n      // If timeframe is a single day, use time. If it is a single year, drop year from dates.\n      label: timeframe\n        ? `${timeframe === 'day' ? new Date(timeMarks[i]).toTimeString().split(' ')[0] : new Date(timeMarks[i]).toISOString().slice(5, 10)}`\n        : new Date(timeMarks[i]).toISOString().slice(0, 10),\n    });\n  }\n\n  /**\n   * Moves the slider handle(s) back one increment\n   */\n  function moveBack(): void {\n    if (singleHandle && !discreteValues) {\n      const currentIndex = timeStampRange.indexOf(values[0]);\n      let newIndex: number;\n      if (timeStampRange[currentIndex] === minAndMax[0]) newIndex = timeStampRange.length - 1;\n      else newIndex = currentIndex - 1;\n      setValues(layerPath, [timeStampRange[newIndex]]);\n    } else if (singleHandle) {\n      const interval = (minAndMax[1] - minAndMax[0]) / 20;\n      const newPosition = values[0] - interval < minAndMax[0] ? minAndMax[1] : values[0] - interval;\n      setValues(layerPath, [newPosition]);\n    } else {\n      let [leftHandle, rightHandle] = values;\n      // If the current distance between slider handles is more than 1/5th of the range, reduce the difference to 1/5th range\n      if (!sliderDeltaRef.current) {\n        if (rightHandle - leftHandle > (minAndMax[1] - minAndMax[0]) / 5) {\n          sliderDeltaRef.current = (minAndMax[1] - minAndMax[0]) / 5;\n          setValues(layerPath, [rightHandle - sliderDeltaRef.current, rightHandle]);\n          return;\n        }\n        sliderDeltaRef.current = rightHandle - leftHandle;\n      }\n      // Check for edge cases and then set new slider values\n      if (locked && reversed) {\n        if (leftHandle === minAndMax[0]) leftHandle = rightHandle;\n        leftHandle -= sliderDeltaRef.current;\n        if (leftHandle < minAndMax[0]) [leftHandle] = minAndMax;\n      } else if (locked) {\n        rightHandle -= sliderDeltaRef.current!;\n        if (rightHandle < leftHandle) rightHandle = leftHandle;\n        if (rightHandle === leftHandle) [, rightHandle] = minAndMax;\n      } else {\n        if (rightHandle > sliderValueRef.current! && leftHandle === sliderValueRef.current) rightHandle = sliderValueRef.current;\n        else rightHandle -= sliderDeltaRef.current!;\n        if (rightHandle <= minAndMax[0]) [, rightHandle] = minAndMax;\n        leftHandle = rightHandle - sliderDeltaRef.current!;\n        if (leftHandle < minAndMax[0]) [leftHandle] = minAndMax;\n        if (leftHandle < sliderValueRef.current! && rightHandle > sliderValueRef.current!) leftHandle = sliderValueRef.current as number;\n      }\n      setValues(layerPath, [leftHandle, rightHandle]);\n    }\n  }\n\n  /**\n   * Moves the slider handle(s) forward one increment\n   */\n  function moveForward(): void {\n    if (singleHandle && !discreteValues) {\n      const currentIndex = timeStampRange.indexOf(values[0]);\n      let newIndex: number;\n      if (timeStampRange[currentIndex] === minAndMax[1]) newIndex = 0;\n      else newIndex = currentIndex + 1;\n      setValues(layerPath, [timeStampRange[newIndex]]);\n    } else if (singleHandle) {\n      const interval = (minAndMax[1] - minAndMax[0]) / 20;\n      const newPosition = values[0] + interval > minAndMax[1] ? minAndMax[0] : values[0] + interval;\n      setValues(layerPath, [newPosition]);\n    } else {\n      let [leftHandle, rightHandle] = values;\n      // If the current distance between slider handles is more than 1/5th of the range, reduce the difference to 1/5th range\n      if (!sliderDeltaRef.current) {\n        if (rightHandle - leftHandle > (minAndMax[1] - minAndMax[0]) / 5) {\n          sliderDeltaRef.current = (minAndMax[1] - minAndMax[0]) / 5;\n          setValues(layerPath, [leftHandle, leftHandle + sliderDeltaRef.current]);\n          return;\n        }\n        sliderDeltaRef.current = rightHandle - leftHandle;\n      }\n      // Check for edge cases and then set new slider values\n      if (locked && reversed) {\n        leftHandle += sliderDeltaRef.current!;\n        if (leftHandle >= rightHandle) [leftHandle] = minAndMax;\n      } else if (locked) {\n        if (rightHandle === minAndMax[1]) rightHandle = leftHandle;\n        rightHandle += sliderDeltaRef.current!;\n        if (rightHandle > minAndMax[1]) [, rightHandle] = minAndMax;\n      } else {\n        if (leftHandle < sliderValueRef.current! && rightHandle === sliderValueRef.current) leftHandle = sliderValueRef.current;\n        else leftHandle += sliderDeltaRef.current!;\n        if (leftHandle >= minAndMax[1]) [leftHandle] = minAndMax;\n        rightHandle = leftHandle + sliderDeltaRef.current!;\n        if (rightHandle > minAndMax[1]) [, rightHandle] = minAndMax;\n        if (rightHandle > sliderValueRef.current! && leftHandle < sliderValueRef.current!) rightHandle = sliderValueRef.current as number;\n      }\n      setValues(layerPath, [leftHandle, rightHandle]);\n    }\n  }\n\n  // #region USE EFFECT\n  useEffect(() => {\n    // Log\n    logger.logTraceUseEffect('TIME-SLIDER - values filtering', values, filtering);\n\n    // If slider cycle is active, pause before advancing to next increment\n    if (isPlaying) {\n      if (reversed) playIntervalRef.current = window.setTimeout(() => moveBack(), delay);\n      else playIntervalRef.current = window.setTimeout(() => moveForward(), delay);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values, filtering, reversed, locked]);\n\n  // When slider cycle is activated, advance to first increment without delay\n  useEffect(() => {\n    // Log\n    logger.logTraceUseEffect('TIME-SLIDER - isPlaying', isPlaying);\n\n    if (isPlaying) {\n      if (reversed) moveBack();\n      else moveForward();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying]);\n  // #endregion\n\n  // #region HANDLE FUNCTIONS\n  function handleBack(): void {\n    sliderValueRef.current = reversed ? values[1] : values[0];\n    moveBack();\n  }\n\n  function handleForward(): void {\n    [sliderValueRef.current] = values;\n    moveForward();\n  }\n\n  function handleLock(): void {\n    clearTimeout(playIntervalRef.current);\n    setLocked(layerPath, !locked);\n  }\n\n  function handlePlay(): void {\n    clearTimeout(playIntervalRef.current);\n    sliderValueRef.current = reversed ? values[1] : values[0];\n    setIsPlaying(!isPlaying);\n  }\n\n  function handleReverse(): void {\n    clearTimeout(playIntervalRef.current);\n    setReversed(layerPath, !reversed);\n    if (isPlaying) {\n      if (reversed) moveBack();\n      else moveForward();\n    }\n  }\n\n  function handleTimeChange(event: React.ChangeEvent<HTMLSelectElement>): void {\n    setDelay(layerPath, event.target.value as unknown as number);\n  }\n\n  function handleCheckbox(newValue: boolean): void {\n    setFiltering(layerPath, newValue);\n    if (!newValue) {\n      clearInterval(playIntervalRef.current);\n      setIsPlaying(false);\n    }\n  }\n  // #endregion\n\n  function returnLockTooltip(): string {\n    if (reversed) {\n      const text = locked\n        ? getLocalizedMessage('timeSlider.slider.unlockRight', displayLanguage)\n        : getLocalizedMessage('timeSlider.slider.lockRight', displayLanguage);\n      return text;\n    }\n    const text = locked\n      ? getLocalizedMessage('timeSlider.slider.unlockLeft', displayLanguage)\n      : getLocalizedMessage('timeSlider.slider.lockLeft', displayLanguage);\n    return text;\n  }\n\n  const handleSliderChange = useCallback(\n    (newValues: number | number[]): void => {\n      // Log\n      logger.logTraceUseCallback('TIME-SLIDER - handleSliderChange', layerPath);\n\n      clearTimeout(playIntervalRef.current);\n      setIsPlaying(false);\n      sliderDeltaRef.current = undefined;\n      setValues(layerPath, newValues as number[]);\n    },\n    [layerPath, setValues]\n  );\n\n  /**\n   * Create labels for values on slider\n   *\n   * @param {number} theValue - The value of the slider handle\n   * @returns {string} A formatted time string or ISO date string\n   */\n  const handleLabelFormat = useCallback(\n    (theValue: number): string => {\n      // Log\n      logger.logTraceUseCallback('TIME-SLIDER - handleLabelFormat', timeframe);\n\n      // If timeframe is a single day, use time. If it is a single year, drop year from dates.\n      if (timeframe === 'day') return new Date(theValue).toTimeString().split(' ')[0].replace(/^0/, '');\n      if (timeframe === 'year') return new Date(theValue).toISOString().slice(5, 10);\n      return new Date(theValue).toISOString().slice(0, 10);\n    },\n    [timeframe]\n  );\n\n  return (\n    <Grid>\n      <div>\n        <Grid container sx={sxClasses.rightPanelBtnHolder}>\n          <Grid item xs={9}>\n            <Typography component=\"div\" sx={{ ...sxClasses.panelHeaders, paddingLeft: '20px', paddingTop: '10px' }}>\n              {`${title || name}`}\n              {timeframe !== undefined &&\n                ` (${timeframe === 'day' ? new Date(defaultValue).toLocaleDateString() : new Date(defaultValue).getFullYear()})`}\n            </Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <div style={{ textAlign: 'right', marginRight: '25px' }}>\n              <Tooltip\n                title={\n                  filtering\n                    ? getLocalizedMessage('timeSlider.slider.disableFilter', displayLanguage)\n                    : getLocalizedMessage('timeSlider.slider.enableFilter', displayLanguage)\n                }\n                placement=\"top\"\n                enterDelay={1000}\n              >\n                <Checkbox checked={filtering} onChange={(event: never, child: boolean): void => handleCheckbox(child)} />\n              </Tooltip>\n            </div>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <div style={{ textAlign: 'center', paddingTop: '20px' }}>\n            <Slider\n              key={values[1] ? values[1] + values[0] : values[0]}\n              sliderId={layerPath}\n              mapId={mapId}\n              style={{ width: '80%', color: 'primary' }}\n              min={minAndMax[0]}\n              max={minAndMax[1]}\n              value={values}\n              marks={sliderMarks}\n              step={!discreteValues ? null : 0.1}\n              onChangeCommitted={handleSliderChange}\n              onValueDisplay={handleLabelFormat}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <div style={{ textAlign: 'center', paddingTop: '20px' }}>\n            {!singleHandle && (\n              <IconButton\n                className=\"style1\"\n                aria-label={returnLockTooltip()}\n                tooltip={returnLockTooltip()}\n                tooltipPlacement=\"top\"\n                onClick={() => handleLock()}\n              >\n                {locked ? <LockIcon /> : <LockOpenIcon />}\n              </IconButton>\n            )}\n            <IconButton\n              className=\"style1\"\n              aria-label={getLocalizedMessage('timeSlider.slider.back', displayLanguage) as string}\n              tooltip=\"timeSlider.slider.back\"\n              tooltipPlacement=\"top\"\n              disabled={isPlaying || !filtering}\n              onClick={() => handleBack()}\n            >\n              <ArrowLeftIcon />\n            </IconButton>\n            <IconButton\n              className=\"style1\"\n              aria-label={\n                isPlaying\n                  ? (getLocalizedMessage('timeSlider.slider.pauseAnimation', displayLanguage) as string)\n                  : (getLocalizedMessage('timeSlider.slider.playAnimation', displayLanguage) as string)\n              }\n              tooltip={isPlaying ? 'timeSlider.slider.pauseAnimation' : 'timeSlider.slider.playAnimation'}\n              tooltipPlacement=\"top\"\n              disabled={!filtering}\n              onClick={() => handlePlay()}\n            >\n              {!isPlaying ? <PlayArrowIcon /> : <PauseIcon />}\n            </IconButton>\n            <IconButton\n              className=\"style1\"\n              aria-label={getLocalizedMessage('timeSlider.slider.forward', displayLanguage) as string}\n              tooltip=\"timeSlider.slider.forward\"\n              tooltipPlacement=\"top\"\n              disabled={isPlaying || !filtering}\n              onClick={() => handleForward()}\n            >\n              <ArrowRightIcon />\n            </IconButton>\n            <IconButton\n              className=\"style1\"\n              aria-label={getLocalizedMessage('timeSlider.slider.changeDirection', displayLanguage) as string}\n              tooltip=\"timeSlider.slider.changeDirection\"\n              tooltipPlacement=\"top\"\n              onClick={() => handleReverse()}\n            >\n              {reversed ? <SwitchRightIcon /> : <SwitchLeftIcon />}\n            </IconButton>\n            <FormControl sx={{ width: '150px' }}>\n              <InputLabel variant=\"standard\">{getLocalizedMessage('timeSlider.slider.timeDelay', displayLanguage)}</InputLabel>\n              <NativeSelect\n                defaultValue={delay}\n                inputProps={{\n                  name: 'timeDelay',\n                  onChange: (event) => handleTimeChange(event),\n                }}\n              >\n                <option value={500}>0.5s</option>\n                <option value={750}>0.75s</option>\n                <option value={1000}>1.0s</option>\n                <option value={1500}>1.5s</option>\n                <option value={2000}>2.0s</option>\n                <option value={3000}>3.0s</option>\n                <option value={5000}>5.0s</option>\n              </NativeSelect>\n            </FormControl>\n          </div>\n        </Grid>\n        {description && (\n          <Grid item xs={12}>\n            <Typography component=\"div\" sx={{ px: '20px', py: '5px' }}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n        {fieldAlias && (\n          <Grid item xs={12}>\n            <Typography component=\"div\" sx={{ px: '20px', py: '5px' }}>\n              {`${fieldAlias} (${field})`}\n            </Typography>\n          </Grid>\n        )}\n      </div>\n    </Grid>\n  );\n}\n","import { TypeWindow } from 'geoview-core/src/core/types/global-types';\nimport { LayerListEntry, Layout } from 'geoview-core/src/core/components/common';\nimport {\n  TypeTimeSliderValues,\n  useTimeSliderLayers,\n} from 'geoview-core/src/core/stores/store-interface-and-intial-values/time-slider-state';\nimport { useMapVisibleLayers } from 'geoview-core/src/core/stores/store-interface-and-intial-values/map-state';\nimport { Box } from 'geoview-core/src/ui';\nimport { logger } from 'geoview-core/src/core/utils/logger';\n\nimport { ReactNode } from 'react';\nimport { TimeSlider } from './time-slider';\nimport { ConfigProps } from './time-slider-types';\n\ninterface TypeTimeSliderProps {\n  configObj: ConfigProps;\n  mapId: string;\n}\n\n/**\n * Time slider tab\n *\n * @param {TypeTimeSliderProps} props The properties passed to slider\n * @returns {JSX.Element} the time slider tab\n */\nexport function TimeSliderPanel(props: TypeTimeSliderProps): JSX.Element {\n  const { mapId, configObj } = props;\n  const { cgpv } = window as TypeWindow;\n  const { react } = cgpv;\n  const { useState, useCallback, useMemo, useEffect } = react;\n\n  // internal state\n  const [selectedLayerPath, setSelectedLayerPath] = useState<string>();\n\n  // get values from store\n  const visibleLayers = useMapVisibleLayers() as string[];\n  const timeSliderLayers = useTimeSliderLayers();\n\n  /**\n   * handle Layer list when clicked on each layer.\n   * @param {LayerListEntry} layer layer clicked by the user.\n   */\n  const handleClickLayerList = useCallback((layer: LayerListEntry) => {\n    // Log\n    logger.logTraceUseCallback('TIME-SLIDER-PANEL - handleLayerList');\n\n    // Set the layer path\n    setSelectedLayerPath(layer.layerPath);\n  }, []);\n\n  /**\n   * Get dates for current filters\n   * @param {TypeTimeSliderValuesListEntry} timeSliderLayerInfo Time slider layer info.\n   */\n  const getFilterInfo = (timeSliderLayerInfo: TypeTimeSliderValues): string | null => {\n    if (timeSliderLayerInfo.filtering)\n      return timeSliderLayerInfo.values.length === 1\n        ? new Date(timeSliderLayerInfo.values[0]).toISOString().slice(0, 19)\n        : `${new Date(timeSliderLayerInfo.values[0]).toISOString().slice(0, 19)} - ${new Date(timeSliderLayerInfo.values[1])\n            .toISOString()\n            .slice(0, 19)}`;\n    return null;\n  };\n\n  // Reacts when the array of layer data updates\n  const memoLayersList = useMemo(() => {\n    // Log\n    logger.logTraceUseMemo('TIME-SLIDER-PANEL - memoLayersList', timeSliderLayers);\n\n    /**\n     * Create layer tooltip\n     * @param {TypeTimeSliderValues} timeSliderLayerInfo Time slider layer info.\n     * @returns\n     */\n    const getLayerTooltip = (timeSliderLayerInfo: TypeTimeSliderValues): ReactNode => {\n      return (\n        <Box sx={{ display: 'flex', alignContent: 'center', '& svg ': { width: '0.75em', height: '0.75em' } }}>\n          {timeSliderLayerInfo.name}\n          {timeSliderLayerInfo.filtering && `: ${getFilterInfo(timeSliderLayerInfo)}`}\n        </Box>\n      );\n    };\n\n    // Return the layers\n    return visibleLayers\n      .map((layerPath) => {\n        return { layerPath, timeSliderLayerInfo: timeSliderLayers[layerPath!] };\n      })\n      .filter((layer) => layer && layer.timeSliderLayerInfo)\n      .map((layer) => {\n        return {\n          layerName: layer.timeSliderLayerInfo.name,\n          layerPath: layer.layerPath,\n          layerFeatures: getFilterInfo(layer.timeSliderLayerInfo),\n          tooltip: getLayerTooltip(layer.timeSliderLayerInfo),\n          layerStatus: 'loaded',\n          queryStatus: 'processed',\n        } as LayerListEntry;\n      });\n  }, [timeSliderLayers, visibleLayers]);\n\n  useEffect(() => {\n    // Log\n    logger.logTraceUseEffect('TIME-SLIDER-PANEL - memoLayersList', memoLayersList, selectedLayerPath);\n\n    // If the selected layer path isn't in the list of layers possible, clear it\n    if (selectedLayerPath && !memoLayersList.map((layer: { layerPath: string }) => layer.layerPath).includes(selectedLayerPath)) {\n      // Clear the selected layer path\n      setSelectedLayerPath('');\n    }\n  }, [memoLayersList, selectedLayerPath]);\n\n  const handleGuideIsOpen = (guideIsOpen: boolean): void => {\n    if (guideIsOpen) {\n      setSelectedLayerPath('');\n    }\n  };\n\n  return (\n    <Layout\n      selectedLayerPath={selectedLayerPath}\n      onLayerListClicked={handleClickLayerList}\n      layerList={memoLayersList}\n      onGuideIsOpen={handleGuideIsOpen}\n      guideContentIds={['timeSlider']}\n    >\n      {selectedLayerPath && <TimeSlider mapId={mapId} config={configObj} layerPath={selectedLayerPath} key={selectedLayerPath} />}\n    </Layout>\n  );\n}\n","import { TypeJsonObject, toJsonObject, Cast, AnySchemaObject } from 'geoview-core/src/core/types/global-types';\nimport { TimeDimension, DateMgt } from 'geoview-core/src/core/utils/date-mgt';\nimport { TypeTabs } from 'geoview-core/src/ui/tabs/tabs';\nimport { TimeSliderIcon } from 'geoview-core/src/ui';\nimport { FooterPlugin } from 'geoview-core/src/api/plugin/footer-plugin';\nimport { MapEventProcessor } from 'geoview-core/src/api/event-processors/event-processor-children/map-event-processor';\nimport { TimeSliderEventProcessor } from 'geoview-core/src/api/event-processors/event-processor-children/time-slider-event-processor';\n\nimport { TimeSliderPanel } from './time-slider-panel';\nimport schema from '../schema.json';\nimport defaultConfig from '../default-config-time-slider-panel.json';\nimport { SliderProps } from './time-slider-types';\n\nexport interface LayerProps {\n  layerPath: string;\n  layerName: string;\n}\nexport interface SliderFilterProps {\n  title: string;\n  description: string;\n  range: string[];\n  defaultValue: string;\n  minAndMax: number[];\n  field: string;\n  singleHandle: boolean;\n  values: number[];\n  filtering: boolean;\n  delay: number;\n  locked: boolean;\n  reversed: boolean;\n}\n\n/**\n * Time slider plugin\n */\nclass TimeSliderPlugin extends FooterPlugin {\n  /**\n   * Return the schema that is defined for this package\n   *\n   * @returns {AnySchemaObject} returns the schema for this package\n   */\n  override schema(): AnySchemaObject {\n    return schema;\n  }\n\n  /**\n   * Return the default config for this package\n   *\n   * @returns {TypeJsonObject} the default config\n   */\n  override defaultConfig(): TypeJsonObject {\n    return toJsonObject(defaultConfig);\n  }\n\n  /**\n   * Translations object to inject to the viewer translations\n   */\n  translations = toJsonObject({\n    en: {\n      timeSlider: {\n        title: 'Time Slider',\n        panel: {\n          noLayers: 'No layers with temporal data',\n        },\n        slider: {\n          unlockRight: 'Unlock right handle',\n          unlockLeft: 'Unlock left handle',\n          lockRight: 'Lock right handle',\n          lockLeft: 'Lock left handle',\n          disableFilter: 'Disable Filtering',\n          enableFilter: 'Enable Filtering',\n          pauseAnimation: 'Pause animation',\n          playAnimation: 'Play animation',\n          back: 'Back',\n          forward: 'Forward',\n          changeDirection: 'Change animation direction',\n          timeDelay: 'Animation time delay',\n        },\n      },\n    },\n    fr: {\n      timeSlider: {\n        title: 'Curseur Temporel',\n        panel: {\n          noLayers: 'Pas de couches avec des données temporelles',\n        },\n        slider: {\n          unlockRight: 'Déverrouiller la poignée droite',\n          unlockLeft: 'Déverrouiller la poignée gauche',\n          lockRight: 'Verrouiller la poignée droite',\n          lockLeft: 'Verrouiller la poignée gauche',\n          disableFilter: 'Désactiver le filtrage',\n          enableFilter: 'Activer le filtrage',\n          pauseAnimation: `Pause de l'animation`,\n          playAnimation: `Jouer l'animation`,\n          back: 'Retour',\n          forward: 'En avant',\n          changeDirection: `Changer la direction de l'animation`,\n          timeDelay: `Délai d'animation`,\n        },\n      },\n    },\n  });\n\n  /**\n   * Overrides the creation of the content properties of this TimeSlider Footer Plugin.\n   * @returns {TypeTabs} The TypeTabs for the TimeSlider Footer Plugin\n   */\n  override onCreateContentProps(): TypeTabs {\n    // Set custom time dimension if applicable\n    this.configObj.sliders.forEach((obj: SliderProps) => {\n      if (obj.temporalDimension) {\n        const timeDimension: TimeDimension = {\n          field: obj.temporalDimension.field,\n          default: obj.temporalDimension.default,\n          unitSymbol: obj.temporalDimension.unitSymbol,\n          nearestValues: obj.temporalDimension.nearestValues,\n          range: DateMgt.createRangeOGC(obj.temporalDimension.range as unknown as string),\n          singleHandle: obj.temporalDimension.singleHandle,\n        };\n\n        // TODO: Check concurrency between plugin creation and setting temporal dimensions\n        // TO.DOCONT: I doubt that this (and few lines below) is a good place to set the temporal dimension on layers that might be\n        // TO.DOCONT: loading their metadata (and setting their own temporal dimension) at the same time as the plugin gets created.\n        // TO.DOCONT: Whichever call comes last will be overriding the setTemporalDimension set by the other concurrent task.\n        // TO.DOCONT: Fortunately, the time-slider plugin gets initialized 'late' as it's currently part of a footer, so they, most of the time,\n        // TO.DOCONT: always overwrite the config from the layer metadata which is probably what we want here.\n        // TP.DOCONT: It's risky, because if the Plugin gets created before the layer metadata is fully fetched and read,\n        // TO.DOCONT: the later will override the plugin settings (can be tested by adding fake delays).\n        // TO.DOCONT: If this Plugin has temporal dimension settings, for various layers, those should be set in synch with the layers\n        // TO.DOCONT: using event listeners, not at Plugin creation.\n        MapEventProcessor.getMapViewerLayerAPI(this.pluginProps.mapId)\n          .geoviewLayer(obj.layerPaths[0])\n          .setTemporalDimension(obj.layerPaths[0], timeDimension);\n      }\n\n      // Set override default value under time dimension if applicable\n      if (obj.defaultValue) {\n        const layerPath = obj.layerPaths[0];\n        const timeDimension = MapEventProcessor.getMapViewerLayerAPI(this.pluginProps.mapId).geoviewLayer(layerPath).layerTemporalDimension[\n          layerPath\n        ];\n        MapEventProcessor.getMapViewerLayerAPI(this.pluginProps.mapId)\n          .geoviewLayer(layerPath)\n          .setTemporalDimension(layerPath, {\n            ...timeDimension,\n            default: obj.defaultValue,\n          });\n      }\n    });\n\n    return {\n      id: 'time-slider',\n      value: this.value!,\n      label: 'timeSlider.title',\n      icon: <TimeSliderIcon />,\n      content: <TimeSliderPanel mapId={this.pluginProps.mapId} configObj={this.configObj} />,\n    };\n  }\n\n  /**\n   * Overrides the addition of the TimeSlider Footer Plugin to make sure to set the time slider configs in the store and apply filters.\n   */\n  override onAdd(): void {\n    // Wait for the layers to be processed so that their 'layerTemporalDimension' information is set\n    this.mapViewer().onMapLayersProcessed(() => {\n      // Now the layerTemporalDimension should be good on the layers\n      const orderedLayerPaths = Object.keys(this.mapViewer().layer.registeredLayers);\n      const initialTimeSliderLayerPaths = this.#filterTimeSliderLayers(orderedLayerPaths);\n      if (initialTimeSliderLayerPaths) {\n        initialTimeSliderLayerPaths.forEach((layerPath) => {\n          // Get the layer\n          const geoviewLayer = this.mapViewer().layer.geoviewLayer(layerPath);\n\n          // Get the config\n          const layerConfig = this.mapViewer().layer.registeredLayers[layerPath];\n\n          // Check and add time slider layer when needed\n          TimeSliderEventProcessor.checkInitTimeSliderLayerAndApplyFilters(this.pluginProps.mapId, geoviewLayer, layerConfig);\n        });\n      }\n    });\n\n    // Call parent\n    super.onAdd();\n  }\n\n  /**\n   * Filters an array of legend layers to get usable time slider layer paths\n   *\n   * @param {string} mapId The id of the map\n   * @param {TypeLegendLayer[]} legendLayers Array of legend layers to filter\n   * @returns {string[]} A list of usable layer paths\n   * @private\n   */\n  #filterTimeSliderLayers(layerPaths: string[]): string[] {\n    const filteredLayerPaths = layerPaths.filter(\n      (layerPath) => this.mapViewer().layer.geoviewLayers[layerPath.split('/')[0]].layerTemporalDimension[layerPath]\n    );\n    return filteredLayerPaths;\n  }\n}\n\nexport default TimeSliderPlugin;\n\n// Keep a reference to the Time Slider Plugin as part of the geoviewPlugins property stored in the window object\nwindow.geoviewPlugins = window.geoviewPlugins || {};\nwindow.geoviewPlugins['time-slider'] = Cast<TimeSliderPlugin>(TimeSliderPlugin);\n"],"names":["FooterPlugin","_AbstractPlugin","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","_inherits","_createClass","key","value","id","this","label","content","pluginProps","mapId","mapViewer","footerBarApi","tabs","footerProps","onCreateContentProps","createTab","removeTab","logger","logTraceCore","AbstractPlugin","_excluded","_excluded2","defaultInput","Input","NativeSelect","inProps","ref","props","useThemeProps","name","className","children","classes","classesProp","IconComponent","ArrowDropDown","A","input","inputProps","other","muiFormControl","useFormControl","fcs","formControlState","states","ownerState","composeClasses","root","useUtilityClasses","otherClasses","inputComponent","NativeSelectInput","variant","type","undefined","clsx","muiName","getSxClasses","theme","panelHeaders","fontSize","palette","geoViewFontSize","lg","fontWeight","marginBottom","rightPanelBtnHolder","marginTop","boxShadow","timeSliderInstructionsTitle","lineHeight","timeSliderInstructionsBody","TimeSlider","logTraceRender","cgpv","window","config","layerPath","react","ui","useState","useRef","useEffect","useCallback","_ui$elements","elements","Grid","Slider","Typography","Checkbox","Tooltip","IconButton","LockIcon","LockOpenIcon","ArrowLeftIcon","PlayArrowIcon","PauseIcon","ArrowRightIcon","SwitchRightIcon","SwitchLeftIcon","useTheme","sxClasses","_useState","_useState2","_slicedToArray","isPlaying","setIsPlaying","playIntervalRef","sliderValueRef","sliderDeltaRef","_useTimeSliderStoreAc","useTimeSliderStoreActions","setTitle","setDefaultValue","setDescription","setValues","setLocked","setReversed","setDelay","setFiltering","displayLanguage","useAppDisplayLanguage","_useTimeSliderLayers$","useTimeSliderLayers","title","description","defaultValue","discreteValues","range","minAndMax","field","fieldAlias","filtering","singleHandle","values","delay","locked","reversed","_config$sliders","logTraceUseEffect","sliderConfig","sliders","find","o","layerPaths","includes","getLocalizedValue","_config$sliders2","isArray","Date","getTime","timeframe","timeStampRange","map","entry","timeDelta","dayDelta","getDate","yearDelta","getFullYear","timeMarks","interval","Math","round","sliderMarks","i","push","toTimeString","split","toISOString","slice","moveBack","newIndex","currentIndex","indexOf","newPosition","_values","leftHandle","rightHandle","current","moveForward","_values2","returnLockTooltip","getLocalizedMessage","setTimeout","handleSliderChange","newValues","logTraceUseCallback","clearTimeout","handleLabelFormat","theValue","replace","_jsx","_jsxs","container","sx","item","xs","component","_objectSpread","paddingLeft","paddingTop","toLocaleDateString","style","textAlign","marginRight","placement","enterDelay","checked","onChange","event","child","newValue","clearInterval","sliderId","width","color","min","max","marks","step","onChangeCommitted","onValueDisplay","tooltip","tooltipPlacement","onClick","disabled","_values3","FormControl","InputLabel","target","handleTimeChange","px","py","TimeSliderPanel","configObj","useMemo","selectedLayerPath","setSelectedLayerPath","visibleLayers","useMapVisibleLayers","timeSliderLayers","handleClickLayerList","layer","getFilterInfo","timeSliderLayerInfo","memoLayersList","logTraceUseMemo","filter","layerName","layerFeatures","Box","display","alignContent","height","layerStatus","queryStatus","Layout","onLayerListClicked","layerList","onGuideIsOpen","guideIsOpen","guideContentIds","_TimeSliderPlugin_brand","WeakSet","TimeSliderPlugin","_FooterPlugin","_classPrivateMethodInitSpec","toJsonObject","en","timeSlider","panel","noLayers","slider","unlockRight","unlockLeft","lockRight","lockLeft","disableFilter","enableFilter","pauseAnimation","playAnimation","back","forward","changeDirection","timeDelay","fr","schema","defaultConfig","_this2","forEach","obj","temporalDimension","timeDimension","default","unitSymbol","nearestValues","DateMgt","createRangeOGC","MapEventProcessor","getMapViewerLayerAPI","geoviewLayer","setTemporalDimension","layerTemporalDimension","icon","TimeSliderIcon","_this3","onMapLayersProcessed","orderedLayerPaths","Object","keys","registeredLayers","initialTimeSliderLayerPaths","_assertClassBrand","_filterTimeSliderLayers","call","layerConfig","TimeSliderEventProcessor","checkInitTimeSliderLayerAndApplyFilters","_get","_getPrototypeOf","prototype","_this4","geoviewLayers","geoviewPlugins","Cast"],"sourceRoot":""}