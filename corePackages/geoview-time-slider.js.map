{"version":3,"file":"corePackages/geoview-time-slider.js","mappings":"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","sources":["webpack://geoview-core/./src/api/plugin/footer-plugin.ts","webpack://geoview-core/../../common/temp/node_modules/.pnpm/@mui+material@5.15.13_@emotion+react@11.11.4_@emotion+styled@11.11.0_@types+react@18.2.66_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/NativeSelect/NativeSelect.js","webpack://geoview-core/../geoview-time-slider/src/time-slider-style.ts","webpack://geoview-core/../geoview-time-slider/src/time-slider.tsx","webpack://geoview-core/../geoview-time-slider/src/time-slider-panel.tsx","webpack://geoview-core/../geoview-time-slider/src/index.tsx"],"sourcesContent":["import { TypeTabs } from '@/ui/tabs/tabs';\nimport { AbstractPlugin } from './abstract-plugin';\nimport { logger } from '@/core/utils/logger';\n\n/** ******************************************************************************************************************************\n * Footer Plugin abstract class.\n */\nexport abstract class FooterPlugin extends AbstractPlugin {\n  // Store index of tab\n  value?: number;\n\n  // Store the footer props\n  footerProps?: TypeTabs;\n\n  /**\n   * Overridable function to create footer props content\n   * @returns TypeTabs The footer props content\n   */\n  onCreateContentProps(): TypeTabs {\n    // Override this to create the footer props..\n\n    // Return dummy content\n    return {\n      id: 'some-id',\n      value: this.value!,\n      label: 'Some label',\n      content: `<div>Content for Footer plugin on map id ${this.pluginProps.mapId} goes here...</div>`,\n    };\n  }\n\n  /**\n   * Called when a footer plugin is being added\n   */\n  onAdd(): void {\n    // Log\n    // No need to log, parent class does it well already via added() function.\n\n    // Set value to length of tabs(?)\n    this.value = this.map()?.footerBarApi.tabs.length;\n\n    // Create props\n    this.footerProps = this.onCreateContentProps();\n\n    // Create tab with the props\n    this.map()?.footerBarApi.createTab(this.footerProps);\n  }\n\n  /**\n   * Called when a footer plugin is being removed\n   */\n  onRemove(): void {\n    // Log\n    // No need to log, parent class does it well already via removed() function.\n\n    // Remove the footer tab\n    if (this.value) this.map()?.footerBarApi.removeTab(this.footerProps!.id);\n  }\n\n  /**\n   * Called when a footer plugin has been selected in the tabs\n   */\n  onSelected(): void {\n    // Log\n    logger.logTraceCore('FOOTER-PLUGIN - onSelected');\n\n    // TODO: Refactor - Move 'onSelected' in AbstractPlugin class so that AppBar can eventually benefit as well?\n\n    // Nothing else here.. but inherited FooterPlugins might override this method to do stuff when they are selected!\n  }\n}\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\", \"classes\", \"IconComponent\", \"input\", \"inputProps\", \"variant\"],\n  _excluded2 = [\"root\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport NativeSelectInput from './NativeSelectInput';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport Input from '../Input';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getNativeSelectUtilityClasses } from './nativeSelectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getNativeSelectUtilityClasses, classes);\n};\nconst defaultInput = /*#__PURE__*/_jsx(Input, {});\n/**\n * An alternative to `<Select native />` with a much smaller bundle size footprint.\n */\nconst NativeSelect = /*#__PURE__*/React.forwardRef(function NativeSelect(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiNativeSelect',\n    props: inProps\n  });\n  const {\n      className,\n      children,\n      classes: classesProp = {},\n      IconComponent = ArrowDropDownIcon,\n      input = defaultInput,\n      inputProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant']\n  });\n  const ownerState = _extends({}, props, {\n    classes: classesProp\n  });\n  const classes = useUtilityClasses(ownerState);\n  const otherClasses = _objectWithoutPropertiesLoose(classesProp, _excluded2);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(input, _extends({\n      // Most of the logic is implemented in `NativeSelectInput`.\n      // The `Select` component is a simple API wrapper to expose something better to play with.\n      inputComponent: NativeSelectInput,\n      inputProps: _extends({\n        children,\n        classes: otherClasses,\n        IconComponent,\n        variant: fcs.variant,\n        type: undefined\n      }, inputProps, input ? input.props.inputProps : {}),\n      ref\n    }, other, {\n      className: clsx(classes.root, input.props.className, className)\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelect.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * @default {}\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon that displays the arrow.\n   * @default ArrowDropDownIcon\n   */\n  IconComponent: PropTypes.elementType,\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   * @default <Input />\n   */\n  input: PropTypes.element,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `input` value. The DOM API casts this to a string.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nNativeSelect.muiName = 'Select';\nexport default NativeSelect;","import { Theme } from '@mui/material/styles';\n\nexport const getSxClasses = (theme: Theme) => ({\n  panelHeaders: {\n    fontSize: theme.palette.geoViewFontSize.lg,\n    fontWeight: '600',\n    marginBottom: '20px',\n  },\n  rightPanelContainer: {\n    border: `2px solid ${theme.palette.primary.main}`,\n    borderRadius: '5px',\n    backgroundColor: theme.palette.common.white,\n  },\n  rightPanelBtnHolder: {\n    marginTop: '20px',\n    marginBottom: '9px',\n    boxShadow: '0px 12px 9px -13px #E0E0E0',\n  },\n  timeSliderInstructionsTitle: {\n    fontSize: theme.palette.geoViewFontSize.lg,\n    fontWeight: '600',\n    lineHeight: '1.5em',\n  },\n  timeSliderInstructionsBody: {\n    fontSize: '1rem',\n  },\n});\n","import { useTheme } from '@mui/material/styles';\nimport { FormControl, InputLabel, NativeSelect } from '@mui/material';\nimport { useTimeSliderLayers, useTimeSliderStoreActions } from 'geoview-core/src/core/stores';\nimport { getLocalizedMessage, getLocalizedValue } from 'geoview-core/src/core/utils/utilities';\nimport { getSxClasses } from './time-slider-style';\nimport { ConfigProps } from './time-slider-types';\n\ninterface TimeSliderPanelProps {\n  config: ConfigProps;\n  mapId: string;\n  layerPath: string;\n}\n\n/**\n * Creates a panel with time sliders\n *\n * @param {TimeSliderPanelProps} TimeSliderPanelProps time slider panel properties\n * @returns {JSX.Element} the slider panel\n */\nexport function TimeSlider(TimeSliderPanelProps: TimeSliderPanelProps) {\n  const { cgpv } = window;\n  const { config, layerPath, mapId } = TimeSliderPanelProps;\n  const { react, ui } = cgpv;\n  const { useState, useRef, useEffect } = react;\n  const {\n    Grid,\n    Slider,\n    Typography,\n    Checkbox,\n    Tooltip,\n    IconButton,\n    LockIcon,\n    LockOpenIcon,\n    ArrowLeftIcon,\n    PlayArrowIcon,\n    PauseIcon,\n    ArrowRightIcon,\n    SwitchRightIcon,\n    SwitchLeftIcon,\n  } = ui.elements;\n\n  const theme = useTheme();\n  const sxClasses = getSxClasses(theme);\n\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n  const playIntervalRef = useRef<number>();\n\n  // References for play button\n  const sliderValueRef = useRef<number>();\n  const sliderDeltaRef = useRef<number>();\n\n  // Get actions and states from store\n  // TODO: evaluate best option to set value by layer path.... trough a getter?\n  const { setTitle, setDefaultValue, setDescription, setValues, setLocked, setReversed, setDelay, setFiltering } =\n    useTimeSliderStoreActions();\n\n  // TODO: check performance as we should technically have one selector by constant\n  const {\n    title,\n    description,\n    name,\n    defaultValue,\n    discreteValues,\n    range,\n    minAndMax,\n    field,\n    fieldAlias,\n    filtering,\n    singleHandle,\n    values,\n    delay,\n    locked,\n    reversed,\n  } = useTimeSliderLayers()[layerPath];\n\n  // slider config\n  useEffect(() => {\n    // TODO: add mechanism to initialize these values during store onInitialize\n    const sliderConfig = config?.sliders?.find((o: { layerPaths: string[] }) => o.layerPaths.includes(layerPath));\n    if (title === undefined) setTitle(layerPath, getLocalizedValue(sliderConfig?.title, mapId) || '');\n    if (description === undefined) setDescription(layerPath, getLocalizedValue(sliderConfig?.description, mapId) || '');\n    if (locked === undefined) setLocked(layerPath, sliderConfig?.locked !== undefined ? sliderConfig?.locked : false);\n    if (reversed === undefined) setReversed(layerPath, sliderConfig?.reversed !== undefined ? sliderConfig?.reversed : false);\n    if (defaultValue === undefined) setDefaultValue(layerPath, sliderConfig?.defaultValue || '');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const sliderConfig = config?.sliders?.find((o: { layerPaths: string[] }) => o.layerPaths.includes(layerPath));\n    if (sliderConfig?.defaultValue) {\n      // update values based on slider's default value\n      const defaultValueIsArray = Array.isArray(sliderConfig?.defaultValue);\n      if (defaultValueIsArray) {\n        setValues(layerPath, [new Date(sliderConfig?.defaultValue[0]).getTime(), new Date(sliderConfig?.defaultValue[1]).getTime()]);\n      } else if (range.includes(sliderConfig?.defaultValue)) {\n        setValues(layerPath, [new Date(sliderConfig?.defaultValue).getTime()]);\n      } else {\n        setValues(layerPath, [new Date(range[0]).getTime()]);\n      }\n    }\n  }, [config, layerPath, range, setFiltering, setValues]);\n\n  const timeStampRange = range.map((entry: string | number | Date) => new Date(entry).getTime());\n  // Check if range occurs in a single day or year\n  const timeDelta = minAndMax[1] - minAndMax[0];\n  const dayDelta = new Date(minAndMax[1]).getDate() - new Date(minAndMax[0]).getDate();\n  const yearDelta = new Date(minAndMax[1]).getFullYear() - new Date(minAndMax[0]).getFullYear();\n  let timeframe: string | undefined;\n  if (dayDelta === 0 && timeDelta < 86400000) timeframe = 'day';\n  else if (yearDelta === 0) timeframe = 'year';\n\n  let timeMarks: number[] = [];\n  if (range.length < 4 && discreteValues) {\n    const interval = (new Date(range[range.length - 1]).getTime() - new Date(range[0]).getTime()) / 4;\n    timeMarks = [minAndMax[0], minAndMax[0] + interval, minAndMax[0] + interval * 2, minAndMax[0] + interval * 3, minAndMax[1]];\n  } else if (range.length < 6 || singleHandle) timeMarks = timeStampRange;\n  else {\n    timeMarks = [\n      minAndMax[0],\n      new Date(range[Math.round(range.length / 4)]).getTime(),\n      new Date(range[Math.round(range.length / 2)]).getTime(),\n      new Date(range[Math.round((3 * range.length) / 4)]).getTime(),\n      minAndMax[1],\n    ];\n  }\n\n  const sliderMarks = [];\n  for (let i = 0; i < timeMarks.length; i++) {\n    sliderMarks.push({\n      value: timeMarks[i],\n      // If timeframe is a single day, use time. If it is a single year, drop year from dates.\n      label: timeframe\n        ? `${timeframe === 'day' ? new Date(timeMarks[i]).toTimeString().split(' ')[0] : new Date(timeMarks[i]).toISOString().slice(5, 10)}`\n        : new Date(timeMarks[i]).toISOString().slice(0, 10),\n    });\n  }\n\n  /**\n   * Create labels for values on slider\n   *\n   * @param {number} value The value of the slider handle\n   * @returns {string} A formatted time string or ISO date string\n   */\n  function valueLabelFormat(value: number): string {\n    // If timeframe is a single day, use time. If it is a single year, drop year from dates.\n    if (timeframe === 'day') return new Date(value).toTimeString().split(' ')[0].replace(/^0/, '');\n    if (timeframe === 'year') return new Date(value).toISOString().slice(5, 10);\n    return new Date(value).toISOString().slice(0, 10);\n  }\n\n  /**\n   * Moves the slider handle(s) back one increment\n   */\n  function moveBack(): void {\n    if (singleHandle && !discreteValues) {\n      const currentIndex = timeStampRange.indexOf(values[0]);\n      let newIndex: number;\n      if (timeStampRange[currentIndex] === minAndMax[0]) newIndex = timeStampRange.length - 1;\n      else newIndex = currentIndex - 1;\n      setValues(layerPath, [timeStampRange[newIndex]]);\n    } else if (singleHandle) {\n      const interval = (minAndMax[1] - minAndMax[0]) / 20;\n      const newPosition = values[0] - interval < minAndMax[0] ? minAndMax[1] : values[0] - interval;\n      setValues(layerPath, [newPosition]);\n    } else {\n      let [leftHandle, rightHandle] = values;\n      // If the current distance between slider handles is more than 1/5th of the range, reduce the difference to 1/5th range\n      if (!sliderDeltaRef.current) {\n        if (rightHandle - leftHandle > (minAndMax[1] - minAndMax[0]) / 5) {\n          sliderDeltaRef.current = (minAndMax[1] - minAndMax[0]) / 5;\n          setValues(layerPath, [rightHandle - sliderDeltaRef.current, rightHandle]);\n          return;\n        }\n        sliderDeltaRef.current = rightHandle - leftHandle;\n      }\n      // Check for edge cases and then set new slider values\n      if (locked && reversed) {\n        if (leftHandle === minAndMax[0]) leftHandle = rightHandle;\n        leftHandle -= sliderDeltaRef.current;\n        if (leftHandle < minAndMax[0]) [leftHandle] = minAndMax;\n      } else if (locked) {\n        rightHandle -= sliderDeltaRef.current!;\n        if (rightHandle < leftHandle) rightHandle = leftHandle;\n        if (rightHandle === leftHandle) [, rightHandle] = minAndMax;\n      } else {\n        if (rightHandle > sliderValueRef.current! && leftHandle === sliderValueRef.current) rightHandle = sliderValueRef.current;\n        else rightHandle -= sliderDeltaRef.current!;\n        if (rightHandle <= minAndMax[0]) [, rightHandle] = minAndMax;\n        leftHandle = rightHandle - sliderDeltaRef.current!;\n        if (leftHandle < minAndMax[0]) [leftHandle] = minAndMax;\n        if (leftHandle < sliderValueRef.current! && rightHandle > sliderValueRef.current!) leftHandle = sliderValueRef.current as number;\n      }\n      setValues(layerPath, [leftHandle, rightHandle]);\n    }\n  }\n\n  /**\n   * Moves the slider handle(s) forward one increment\n   */\n  function moveForward(): void {\n    if (singleHandle && !discreteValues) {\n      const currentIndex = timeStampRange.indexOf(values[0]);\n      let newIndex: number;\n      if (timeStampRange[currentIndex] === minAndMax[1]) newIndex = 0;\n      else newIndex = currentIndex + 1;\n      setValues(layerPath, [timeStampRange[newIndex]]);\n    } else if (singleHandle) {\n      const interval = (minAndMax[1] - minAndMax[0]) / 20;\n      const newPosition = values[0] + interval > minAndMax[1] ? minAndMax[0] : values[0] + interval;\n      setValues(layerPath, [newPosition]);\n    } else {\n      let [leftHandle, rightHandle] = values;\n      // If the current distance between slider handles is more than 1/5th of the range, reduce the difference to 1/5th range\n      if (!sliderDeltaRef.current) {\n        if (rightHandle - leftHandle > (minAndMax[1] - minAndMax[0]) / 5) {\n          sliderDeltaRef.current = (minAndMax[1] - minAndMax[0]) / 5;\n          setValues(layerPath, [leftHandle, leftHandle + sliderDeltaRef.current]);\n          return;\n        }\n        sliderDeltaRef.current = rightHandle - leftHandle;\n      }\n      // Check for edge cases and then set new slider values\n      if (locked && reversed) {\n        leftHandle += sliderDeltaRef.current!;\n        if (leftHandle >= rightHandle) [leftHandle] = minAndMax;\n      } else if (locked) {\n        if (rightHandle === minAndMax[1]) rightHandle = leftHandle;\n        rightHandle += sliderDeltaRef.current!;\n        if (rightHandle > minAndMax[1]) [, rightHandle] = minAndMax;\n      } else {\n        if (leftHandle < sliderValueRef.current! && rightHandle === sliderValueRef.current) leftHandle = sliderValueRef.current;\n        else leftHandle += sliderDeltaRef.current!;\n        if (leftHandle >= minAndMax[1]) [leftHandle] = minAndMax;\n        rightHandle = leftHandle + sliderDeltaRef.current!;\n        if (rightHandle > minAndMax[1]) [, rightHandle] = minAndMax;\n        if (rightHandle > sliderValueRef.current! && leftHandle < sliderValueRef.current!) rightHandle = sliderValueRef.current as number;\n      }\n      setValues(layerPath, [leftHandle, rightHandle]);\n    }\n  }\n\n  // #region USE EFFECT\n  useEffect(() => {\n    // If slider cycle is active, pause before advancing to next increment\n    if (isPlaying) {\n      if (reversed) playIntervalRef.current = window.setTimeout(() => moveBack(), delay);\n      else playIntervalRef.current = window.setTimeout(() => moveForward(), delay);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values, filtering, reversed, locked]);\n\n  // When slider cycle is activated, advance to first increment without delay\n  useEffect(() => {\n    if (isPlaying) {\n      if (reversed) moveBack();\n      else moveForward();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPlaying]);\n  // #endregion\n\n  // #region HANDLE FUNCTIONS\n  function handleBack(): void {\n    sliderValueRef.current = reversed ? values[1] : values[0];\n    moveBack();\n  }\n\n  function handleForward(): void {\n    [sliderValueRef.current] = values;\n    moveForward();\n  }\n\n  function handleLock(): void {\n    clearTimeout(playIntervalRef.current);\n    setLocked(layerPath, !locked);\n  }\n\n  function handlePlay(): void {\n    clearTimeout(playIntervalRef.current);\n    sliderValueRef.current = reversed ? values[1] : values[0];\n    setIsPlaying(!isPlaying);\n  }\n\n  function handleReverse(): void {\n    clearTimeout(playIntervalRef.current);\n    setReversed(layerPath, !reversed);\n    if (isPlaying) {\n      if (reversed) moveBack();\n      else moveForward();\n    }\n  }\n\n  function handleSliderChange(event: number | number[]): void {\n    clearTimeout(playIntervalRef.current);\n    setIsPlaying(false);\n    sliderDeltaRef.current = undefined;\n    setValues(layerPath, event as number[]);\n  }\n\n  function handleTimeChange(event: React.ChangeEvent<HTMLSelectElement>): void {\n    setDelay(layerPath, event.target.value as unknown as number);\n  }\n\n  function handleCheckbox(newValue: boolean): void {\n    setFiltering(layerPath, newValue);\n    if (!newValue) {\n      clearInterval(playIntervalRef.current);\n      setIsPlaying(false);\n    }\n  }\n  // #endregion\n\n  function returnLockTooltip(): string {\n    if (reversed) {\n      const text = locked\n        ? getLocalizedMessage(mapId, 'timeSlider.slider.unlockRight')\n        : getLocalizedMessage(mapId, 'timeSlider.slider.lockRight');\n      return text;\n    }\n    const text = locked\n      ? getLocalizedMessage(mapId, 'timeSlider.slider.unlockLeft')\n      : getLocalizedMessage(mapId, 'timeSlider.slider.lockLeft');\n    return text;\n  }\n\n  return (\n    <Grid>\n      <div style={sxClasses.rightPanelContainer}>\n        <Grid container sx={sxClasses.rightPanelBtnHolder}>\n          <Grid item xs={9}>\n            <Typography component=\"div\" sx={{ ...sxClasses.panelHeaders, paddingLeft: '20px', paddingTop: '10px' }}>\n              {`${title || name}`}\n              {timeframe !== undefined &&\n                ` (${timeframe === 'day' ? new Date(defaultValue).toLocaleDateString() : new Date(defaultValue).getFullYear()})`}\n            </Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <div style={{ textAlign: 'right', marginRight: '25px' }}>\n              <Tooltip\n                title={\n                  filtering\n                    ? getLocalizedMessage(mapId, 'timeSlider.slider.disableFilter')\n                    : getLocalizedMessage(mapId, 'timeSlider.slider.enableFilter')\n                }\n                placement=\"top\"\n                enterDelay={1000}\n              >\n                <Checkbox checked={filtering} onChange={(event: never, child: boolean) => handleCheckbox(child)} />\n              </Tooltip>\n            </div>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <div style={{ textAlign: 'center', paddingTop: '20px' }}>\n            <Slider\n              sliderId={layerPath}\n              mapId={mapId}\n              style={{ width: '80%', color: 'primary' }}\n              min={minAndMax[0]}\n              max={minAndMax[1]}\n              value={values}\n              valueLabelFormat={(value: number) => valueLabelFormat(value)}\n              marks={sliderMarks}\n              step={!discreteValues ? null : 0.1}\n              customOnChange={(event: number | number[]) => handleSliderChange(event)}\n              key={values[1] ? values[1] + values[0] : values[0]}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <div style={{ textAlign: 'center', paddingTop: '20px' }}>\n            {!singleHandle && (\n              <IconButton\n                className=\"style1\"\n                aria-label={returnLockTooltip()}\n                tooltip={returnLockTooltip()}\n                tooltipPlacement=\"top\"\n                onClick={() => handleLock()}\n              >\n                {locked ? <LockIcon /> : <LockOpenIcon />}\n              </IconButton>\n            )}\n            <IconButton\n              className=\"style1\"\n              aria-label={getLocalizedMessage(mapId, 'timeSlider.slider.back') as string}\n              tooltip=\"timeSlider.slider.back\"\n              tooltipPlacement=\"top\"\n              disabled={isPlaying || !filtering}\n              onClick={() => handleBack()}\n            >\n              <ArrowLeftIcon />\n            </IconButton>\n            <IconButton\n              className=\"style1\"\n              aria-label={\n                isPlaying\n                  ? (getLocalizedMessage(mapId, 'timeSlider.slider.pauseAnimation') as string)\n                  : (getLocalizedMessage(mapId, 'timeSlider.slider.playAnimation') as string)\n              }\n              tooltip={isPlaying ? 'timeSlider.slider.pauseAnimation' : 'timeSlider.slider.playAnimation'}\n              tooltipPlacement=\"top\"\n              disabled={!filtering}\n              onClick={() => handlePlay()}\n            >\n              {!isPlaying ? <PlayArrowIcon /> : <PauseIcon />}\n            </IconButton>\n            <IconButton\n              className=\"style1\"\n              aria-label={getLocalizedMessage(mapId, 'timeSlider.slider.forward') as string}\n              tooltip=\"timeSlider.slider.forward\"\n              tooltipPlacement=\"top\"\n              disabled={isPlaying || !filtering}\n              onClick={() => handleForward()}\n            >\n              <ArrowRightIcon />\n            </IconButton>\n            <IconButton\n              className=\"style1\"\n              aria-label={getLocalizedMessage(mapId, 'timeSlider.slider.changeDirection') as string}\n              tooltip=\"timeSlider.slider.changeDirection\"\n              tooltipPlacement=\"top\"\n              onClick={() => handleReverse()}\n            >\n              {reversed ? <SwitchRightIcon /> : <SwitchLeftIcon />}\n            </IconButton>\n            <FormControl sx={{ width: '150px' }}>\n              <InputLabel variant=\"standard\">{getLocalizedMessage(mapId, 'timeSlider.slider.timeDelay')}</InputLabel>\n              <NativeSelect\n                defaultValue={delay}\n                inputProps={{\n                  name: 'timeDelay',\n                  onChange: (event) => handleTimeChange(event),\n                }}\n              >\n                <option value={500}>0.5s</option>\n                <option value={750}>0.75s</option>\n                <option value={1000}>1.0s</option>\n                <option value={1500}>1.5s</option>\n                <option value={2000}>2.0s</option>\n                <option value={3000}>3.0s</option>\n                <option value={5000}>5.0s</option>\n              </NativeSelect>\n            </FormControl>\n          </div>\n        </Grid>\n        {description && (\n          <Grid item xs={12}>\n            <Typography component=\"div\" sx={{ px: '20px', py: '5px' }}>\n              {description}\n            </Typography>\n          </Grid>\n        )}\n        {fieldAlias && (\n          <Grid item xs={12}>\n            <Typography component=\"div\" sx={{ px: '20px', py: '5px' }}>\n              {`${fieldAlias} (${field})`}\n            </Typography>\n          </Grid>\n        )}\n      </div>\n    </Grid>\n  );\n}\n","import { useTheme } from '@mui/material/styles';\nimport { TypeWindow } from 'geoview-core/src/core/types/global-types';\nimport { getLocalizedMessage } from 'geoview-core/src/core/utils/utilities';\nimport { LayerListEntry, Layout } from 'geoview-core/src/core/components/common';\nimport { TypeTimeSliderValues, useMapVisibleLayers, useTimeSliderLayers } from 'geoview-core/src/core/stores';\nimport { Box, Paper, Typography } from 'geoview-core/src/ui';\nimport { logger } from 'geoview-core/src/core/utils/logger';\n\nimport { ReactNode } from 'react';\nimport { TimeSlider } from './time-slider';\nimport { ConfigProps } from './time-slider-types';\nimport { getSxClasses } from './time-slider-style';\n\ninterface TypeTimeSliderProps {\n  configObj: ConfigProps;\n  mapId: string;\n}\n\n/**\n * Time slider tab\n *\n * @param {TypeTimeSliderProps} props The properties passed to slider\n * @returns {JSX.Element} the time slider tab\n */\nexport function TimeSliderPanel(props: TypeTimeSliderProps): JSX.Element {\n  const { mapId, configObj } = props;\n  const { cgpv } = window as TypeWindow;\n  const { react } = cgpv;\n  const { useState, useCallback, useMemo, useEffect } = react;\n\n  const theme = useTheme();\n  const sxClasses = getSxClasses(theme);\n\n  // internal state\n  const [selectedLayerPath, setSelectedLayerPath] = useState<string>();\n\n  // get values from store\n  const visibleLayers = useMapVisibleLayers() as string[];\n  const timeSliderLayers = useTimeSliderLayers();\n\n  /**\n   * handle Layer list when clicked on each layer.\n   * @param {LayerListEntry} layer layer clicked by the user.\n   */\n  const handleClickLayerList = useCallback((layer: LayerListEntry) => {\n    // Log\n    logger.logTraceUseCallback('TIME-SLIDER-PANEL - handleLayerList');\n\n    // Set the layer path\n    setSelectedLayerPath(layer.layerPath);\n  }, []);\n\n  /**\n   * Get dates for current filters\n   * @param {TypeTimeSliderValuesListEntry} timeSliderLayerInfo Time slider layer info.\n   */\n  const getFilterInfo = (timeSliderLayerInfo: TypeTimeSliderValues): string | null => {\n    if (timeSliderLayerInfo.filtering)\n      return timeSliderLayerInfo.values.length === 1\n        ? new Date(timeSliderLayerInfo.values[0]).toISOString().slice(0, 19)\n        : `${new Date(timeSliderLayerInfo.values[0]).toISOString().slice(0, 19)} - ${new Date(timeSliderLayerInfo.values[1])\n            .toISOString()\n            .slice(0, 19)}`;\n    return null;\n  };\n\n  // Reacts when the array of layer data updates\n  const memoLayersList = useMemo(() => {\n    // Log\n    logger.logTraceUseMemo('TIME-SLIDER-PANEL - memoLayersList', timeSliderLayers);\n\n    /**\n     * Create layer tooltip\n     * @param {TypeTimeSliderValues} timeSliderLayerInfo Time slider layer info.\n     * @returns\n     */\n    const getLayerTooltip = (timeSliderLayerInfo: TypeTimeSliderValues): ReactNode => {\n      return (\n        <Box sx={{ display: 'flex', alignContent: 'center', '& svg ': { width: '0.75em', height: '0.75em' } }}>\n          {timeSliderLayerInfo.name}\n          {timeSliderLayerInfo.filtering && `: ${getFilterInfo(timeSliderLayerInfo)}`}\n        </Box>\n      );\n    };\n\n    // Return the layers\n    return visibleLayers\n      .map((layerPath) => {\n        return { layerPath, timeSliderLayerInfo: timeSliderLayers[layerPath!] };\n      })\n      .filter((layer) => layer && layer.timeSliderLayerInfo)\n      .map((layer) => {\n        return {\n          layerName: layer.timeSliderLayerInfo.name,\n          layerPath: layer.layerPath,\n          layerFeatures: getFilterInfo(layer.timeSliderLayerInfo),\n          tooltip: getLayerTooltip(layer.timeSliderLayerInfo),\n          layerStatus: 'loaded',\n          queryStatus: 'processed',\n        } as LayerListEntry;\n      });\n  }, [timeSliderLayers, visibleLayers]);\n\n  useEffect(() => {\n    // Log\n    logger.logTraceUseEffect('TIME-SLIDER-PANEL - memoLayersList', memoLayersList, selectedLayerPath);\n\n    // If the selected layer path isn't in the list of layers possible, clear it\n    if (selectedLayerPath && !memoLayersList.map((layer) => layer.layerPath).includes(selectedLayerPath)) {\n      // Clear the selected layer path\n      setSelectedLayerPath('');\n    }\n  }, [memoLayersList, selectedLayerPath]);\n\n  return (\n    <Layout selectedLayerPath={selectedLayerPath} onLayerListClicked={handleClickLayerList} layerList={memoLayersList}>\n      {selectedLayerPath && <TimeSlider mapId={mapId} config={configObj} layerPath={selectedLayerPath} key={selectedLayerPath} />}\n      {!selectedLayerPath && (\n        <Paper sx={{ padding: '2rem' }}>\n          <Typography variant=\"h3\" gutterBottom sx={sxClasses.timeSliderInstructionsTitle}>\n            {getLocalizedMessage(mapId, 'timeSlider.instructions')}\n          </Typography>\n          <Typography component=\"p\" sx={sxClasses.timeSliderInstructionsBody}>\n            {getLocalizedMessage(mapId, 'timeSlider.instructions')}\n          </Typography>\n        </Paper>\n      )}\n    </Layout>\n  );\n}\n","import { TypeJsonObject, toJsonObject, Cast, AnySchemaObject } from 'geoview-core/src/core/types/global-types';\nimport { TimeDimension } from 'geoview-core/src/core/utils/date-mgt';\nimport { TypeTabs } from 'geoview-core/src/ui/tabs/tabs';\nimport { api } from 'geoview-core';\nimport { TimeSliderIcon } from 'geoview-core/src/ui';\nimport { FooterPlugin } from 'geoview-core/src/api/plugin/footer-plugin';\n\nimport { TimeSliderPanel } from './time-slider-panel';\nimport schema from '../schema.json';\nimport defaultConfig from '../default-config-time-slider-panel.json';\nimport { SliderProps } from './time-slider-types';\n\nexport interface LayerProps {\n  layerPath: string;\n  layerName: string;\n}\nexport interface SliderFilterProps {\n  title: string;\n  description: string;\n  range: string[];\n  defaultValue: string;\n  minAndMax: number[];\n  field: string;\n  singleHandle: boolean;\n  values: number[];\n  filtering: boolean;\n  delay: number;\n  locked: boolean;\n  reversed: boolean;\n}\n\n/**\n * Time slider plugin\n */\nclass TimeSliderPlugin extends FooterPlugin {\n  /**\n   * Return the schema that is defined for this package\n   *\n   * @returns {AnySchemaObject} returns the schema for this package\n   */\n  schema = (): AnySchemaObject => schema;\n\n  /**\n   * Return the default config for this package\n   *\n   * @returns {TypeJsonObject} the default config\n   */\n  defaultConfig = (): TypeJsonObject => toJsonObject(defaultConfig);\n\n  /**\n   * Translations object to inject to the viewer translations\n   */\n  translations = toJsonObject({\n    en: {\n      timeSlider: {\n        title: 'Time Slider',\n        panel: {\n          noLayers: 'No layers with temporal data',\n        },\n        slider: {\n          unlockRight: 'Unlock right handle',\n          unlockLeft: 'Unlock left handle',\n          lockRight: 'Lock right handle',\n          lockLeft: 'Lock left handle',\n          disableFilter: 'Disable Filtering',\n          enableFilter: 'Enable Filtering',\n          pauseAnimation: 'Pause animation',\n          playAnimation: 'Play animation',\n          back: 'Back',\n          forward: 'Forward',\n          changeDirection: 'Change animation direction',\n          timeDelay: 'Animation time delay',\n        },\n        instructions: 'Time Slider Instructions',\n      },\n    },\n    fr: {\n      timeSlider: {\n        title: 'Curseur Temporel',\n        panel: {\n          noLayers: 'Pas de couches avec des données temporelles',\n        },\n        slider: {\n          unlockRight: 'Déverrouiller la poignée droite',\n          unlockLeft: 'Déverrouiller la poignée gauche',\n          lockRight: 'Verrouiller la poignée droite',\n          lockLeft: 'Verrouiller la poignée gauche',\n          disableFilter: 'Désactiver le filtrage',\n          enableFilter: 'Activer le filtrage',\n          pauseAnimation: `Pause de l'animation`,\n          playAnimation: `Jouer l'animation`,\n          back: 'Retour',\n          forward: 'En avant',\n          changeDirection: `Changer la direction de l'animation`,\n          timeDelay: `Délai d'animation`,\n        },\n        instructions: 'Instructions Curseur Temporel',\n      },\n    },\n  });\n\n  onCreateContentProps = (): TypeTabs => {\n    // Set custom time dimension if applicable\n    this.configObj.sliders.forEach((obj: SliderProps) => {\n      if (obj.temporalDimension) {\n        const timeDimension: TimeDimension = {\n          field: obj.temporalDimension.field,\n          default: obj.temporalDimension.default,\n          unitSymbol: obj.temporalDimension.unitSymbol,\n          nearestValues: obj.temporalDimension.nearestValues,\n          range: api.dateUtilities.createRangeOGC(obj.temporalDimension.range as unknown as string),\n          singleHandle: obj.temporalDimension.singleHandle,\n        };\n\n        // TODO: Check concurrency between plugin creation and setting temporal dimensions\n        // TO.DOCONT: I doubt that this (and few lines below) is a good place to set the temporal dimension on layers that might be\n        // TO.DOCONT: loading their metadata (and setting their own temporal dimension) at the same time as the plugin gets created.\n        // TO.DOCONT: Whichever call comes last will be overriding the setTemporalDimension set by the other concurrent task.\n        // TO.DOCONT: Fortunately, the time-slider plugin gets initialized 'late' as it's currently part of a footer, so they, most of the time,\n        // TO.DOCONT: always overwrite the config from the layer metadata which is probably what we want here.\n        // TP.DOCONT: It's risky, because if the Plugin gets created before the layer metadata is fully fetched and read,\n        // TO.DOCONT: the later will override the plugin settings (can be tested by adding fake delays).\n        // TO.DOCONT: If this Plugin has temporal dimension settings, for various layers, those should be set in synch with the layers\n        // TO.DOCONT: using event listeners, not at Plugin creation.\n        api.maps[this.pluginProps.mapId].layer.geoviewLayer(obj.layerPaths[0]).setTemporalDimension(obj.layerPaths[0], timeDimension);\n      }\n\n      // Set override default value under time dimension if applicable\n      if (obj.defaultValue) {\n        const layerPath = obj.layerPaths[0];\n        const timeDimension = api.maps[this.pluginProps.mapId].layer.geoviewLayer(layerPath).layerTemporalDimension[layerPath];\n        api.maps[this.pluginProps.mapId].layer.geoviewLayer(layerPath).setTemporalDimension(layerPath, {\n          ...timeDimension,\n          default: obj.defaultValue,\n        });\n      }\n    });\n\n    return {\n      id: 'time-slider',\n      value: this.value!,\n      label: 'timeSlider.title',\n      icon: <TimeSliderIcon />,\n      content: <TimeSliderPanel mapId={this.pluginProps.mapId} configObj={this.configObj} />,\n    };\n  };\n}\n\nexport default TimeSliderPlugin;\n\n// Keep a reference to the Time Slider Plugin as part of the geoviewPlugins property stored in the window object\nwindow.geoviewPlugins = window.geoviewPlugins || {};\nwindow.geoviewPlugins['time-slider'] = Cast<TimeSliderPlugin>(TimeSliderPlugin);\n"],"names":["FooterPlugin","_AbstractPlugin","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","_assertThisInitialized","_inherits","_createClass","key","value","id","this","label","content","pluginProps","mapId","_this$map","_this$map2","map","footerBarApi","tabs","footerProps","onCreateContentProps","createTab","_this$map3","removeTab","logger","logTraceCore","AbstractPlugin","_excluded","_excluded2","defaultInput","Input","NativeSelect","inProps","ref","props","useThemeProps","name","className","children","classes","classesProp","IconComponent","ArrowDropDown","A","input","inputProps","other","muiFormControl","useFormControl","fcs","formControlState","states","ownerState","composeClasses","root","useUtilityClasses","otherClasses","inputComponent","NativeSelectInput","variant","type","undefined","clsx","muiName","getSxClasses","theme","panelHeaders","fontSize","palette","geoViewFontSize","lg","fontWeight","marginBottom","rightPanelContainer","border","primary","main","borderRadius","backgroundColor","common","white","rightPanelBtnHolder","marginTop","boxShadow","timeSliderInstructionsTitle","lineHeight","timeSliderInstructionsBody","TimeSlider","TimeSliderPanelProps","cgpv","window","config","layerPath","react","ui","useState","useRef","useEffect","_ui$elements","elements","Grid","Slider","Typography","Checkbox","Tooltip","IconButton","LockIcon","LockOpenIcon","ArrowLeftIcon","PlayArrowIcon","PauseIcon","ArrowRightIcon","SwitchRightIcon","SwitchLeftIcon","useTheme","sxClasses","_useState","_useState2","_slicedToArray","isPlaying","setIsPlaying","playIntervalRef","sliderValueRef","sliderDeltaRef","_useTimeSliderStoreAc","useTimeSliderStoreActions","setTitle","setDefaultValue","setDescription","setValues","setLocked","setReversed","setDelay","setFiltering","_useTimeSliderLayers$","useTimeSliderLayers","title","description","defaultValue","discreteValues","range","minAndMax","field","fieldAlias","filtering","singleHandle","values","delay","locked","reversed","_config$sliders","sliderConfig","sliders","find","o","layerPaths","includes","getLocalizedValue","_config$sliders2","isArray","Date","getTime","timeframe","timeStampRange","entry","timeDelta","dayDelta","getDate","yearDelta","getFullYear","timeMarks","interval","Math","round","sliderMarks","i","push","toTimeString","split","toISOString","slice","moveBack","newIndex","currentIndex","indexOf","newPosition","_values","leftHandle","rightHandle","current","moveForward","_values2","returnLockTooltip","getLocalizedMessage","setTimeout","_jsx","_jsxs","style","container","sx","item","xs","component","_objectSpread","paddingLeft","paddingTop","toLocaleDateString","textAlign","marginRight","placement","enterDelay","checked","onChange","event","child","newValue","clearInterval","sliderId","width","color","min","max","valueLabelFormat","replace","marks","step","customOnChange","clearTimeout","handleSliderChange","tooltip","tooltipPlacement","onClick","disabled","_values3","FormControl","InputLabel","target","handleTimeChange","px","py","TimeSliderPanel","configObj","useCallback","useMemo","selectedLayerPath","setSelectedLayerPath","visibleLayers","useMapVisibleLayers","timeSliderLayers","handleClickLayerList","layer","logTraceUseCallback","getFilterInfo","timeSliderLayerInfo","memoLayersList","logTraceUseMemo","filter","layerName","layerFeatures","Box","display","alignContent","height","layerStatus","queryStatus","logTraceUseEffect","Layout","onLayerListClicked","layerList","Paper","padding","gutterBottom","TimeSliderPlugin","_FooterPlugin","schema","toJsonObject","defaultConfig","en","timeSlider","panel","noLayers","slider","unlockRight","unlockLeft","lockRight","lockLeft","disableFilter","enableFilter","pauseAnimation","playAnimation","back","forward","changeDirection","timeDelay","instructions","fr","forEach","obj","temporalDimension","timeDimension","default","unitSymbol","nearestValues","api","dateUtilities","createRangeOGC","maps","geoviewLayer","setTemporalDimension","layerTemporalDimension","icon","TimeSliderIcon","geoviewPlugins","Cast"],"sourceRoot":""}